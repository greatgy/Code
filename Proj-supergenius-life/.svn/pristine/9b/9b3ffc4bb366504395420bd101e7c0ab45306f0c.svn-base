package com.supergenius.web.front.life.helper;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.genius.core.base.annotation.Json;
import com.genius.core.base.utils.CookieUtil;
import com.genius.core.base.utils.FileUtil;
import com.genius.core.serial.utils.SerialUtil;
import com.genius.model.base.entity.Pager;
import com.genius.server.base.helper.BaseHP;
import com.supergenius.global.conf.SysConf;
import com.supergenius.global.constants.ViewKeyDict;
import com.supergenius.server.life.util.TopicRedisUtil;
import com.supergenius.xo.common.constants.MapperDict;
import com.supergenius.xo.common.enums.EChannel;
import com.supergenius.xo.life.entity.Topic;
import com.supergenius.xo.life.service.TopicSO;

public class TopicHP extends BaseHP {

	private static TopicSO so;

	public static TopicSO getSO() {
		if (so == null) {
			so = (TopicSO) spring.getBean(TopicSO.class);
		}
		return so;
	}

	/**
	 * 通过oid获取话题
	 * 
	 * @param id
	 * @return
	 * @author YangGuang
	 * @date 2018年5月15日14:42:31
	 */
	public static Topic getTopic(int id) {
		Map<String, Object> map = getParamMap();
		map.put(MapperDict.oid, id);
		return getSO().getOne(map);
	}

	/**
	 * 增加点击计数
	 * 
	 * @param uid
	 * @param user
	 * @return
	 * @author 2017年8月29日14:45:35
	 */
	public static void incrClickCount(HttpServletRequest request, HttpServletResponse response, String uid) {
		boolean isfirst = true;
		Cookie cookie = CookieUtil.getCookie(request, uid);
		if (cookie != null) {
			isfirst = false;
		}
		if (isfirst) {
			TopicRedisUtil.incr(uid, ViewKeyDict.clickcount);
			CookieUtil.addCookieSess(response, uid, EChannel.finance.name());
		}
	}
	
	/**
	 * 获取相关话题
	 * 
	 * @param pagesize
	 * @param pagenum
	 * @return
	 * @author YangGuang
	 * @date 2018年5月16日12:30:22
	 */
	public static List<Topic> getRelateTopic(int pagenum, int pagesize) {
		Pager pager = Pager.getNewInstance(pagenum, pagesize);
		Map<String, Object> map = getParamMap(pager);
		map.put(MapperDict.orderBy, MapperDict.sql_order_by + MapperDict.istop + MapperDict.desc + MapperDict.comma + MapperDict.createtime + MapperDict.desc);
		List<Topic> list = getSO().getList(map);
		initTopicList(list);
		return list;
	}
	
	/**
	 * 获取话题list
	 * 
	 * @param pagesize
	 * @param pagenum
	 * @param cid
	 * @return
	 * @author YangGuang
	 * @date 2018年5月16日12:30:27
	 */
	public static List<Topic> getTopics(int cid, int pagenum, int pagesize) {
		Pager pager = Pager.getNewInstance(pagenum, pagesize);
		Map<String, Object> map = getParamMap(pager);
		map.put(MapperDict.cid, cid);
		map.put(MapperDict.orderBy, MapperDict.sql_order_by + MapperDict.istop + MapperDict.desc + MapperDict.comma + MapperDict.createtime + MapperDict.desc);
		List<Topic> list = getSO().getList(map);
		initTopicList(list);
		return list;
	}
	
	/**
	 * 按热度获取话题
	 * 
	 * @param pagenum
	 * @param pagesize
	 * @return
	 * @author YangGuang
	 */
	@SuppressWarnings("unchecked")
	public static List<Topic> getTeaseHot(int pagenum, int pagesize) {
		String path = SysConf.SerialBasePath + SysConf.SerialTopicsPath;
		List<Topic> result = new ArrayList<>();
		List<Topic> topiclist = new ArrayList<>();
		topiclist = SerialUtil.deserializeFromJson(path, topiclist.getClass(), Json.webStrategy);
		if (topiclist.size() == 0) {
			Map<String, Object> map = getParamMap();
			map.put(MapperDict.orderBy, MapperDict.sql_order_by + MapperDict.istop + MapperDict.desc + MapperDict.comma + MapperDict.createtime + MapperDict.desc);;
			topiclist = getSO().getList(map);
			initTopicList(topiclist);
			topiclist.sort(COMPARATOR);
			SerialUtil.serializeToJson(topiclist, path, Json.webStrategy);
		}
		
		int maxHotsize = pagenum * SysConf.TopicLoadSize;
		if (maxHotsize > topiclist.size()) {
			maxHotsize = topiclist.size();
		}
		result = topiclist.subList((pagenum - 1) * SysConf.TopicLoadSize, maxHotsize);
		return result;
	}

	/**
	 * 删除序列化的话题
	 * 
	 * @return
	 * @author YangGuang
	 */
	private static void deleteTopic() {
		FileUtil.delete(SysConf.SerialBasePath + SysConf.SerialTopicsPath);
	};
	
	private static final Comparator<Topic> COMPARATOR = new Comparator<Topic>() {
		public int compare(Topic o1, Topic o2) {
			int i = o1.compareTo(o2);
			return i;// 运用Tease类的compareTo方法比较两个对象
		}
	};

	/**
	 * 初始化话题
	 * 
	 * @return
	 * @author YangGuang
	 * @date 2018年5月16日14:13:51
	 * @return boolean
	 */
	public static boolean initTopicList(List<Topic> list) {
		boolean flag = true;
		String uid = "";
		Map<String, Object> map = new HashMap<String, Object>();
		for (Topic topic : list) {
			uid = topic.getUid();
			if (TopicRedisUtil.isInit(uid)) {
				topic.setClickcount(TopicRedisUtil.getInt(uid, ViewKeyDict.clickcount));
				topic.setCollectcount(TopicRedisUtil.getInt(uid, ViewKeyDict.collectcount));
				topic.setCommentscount(TopicRedisUtil.getInt(uid, ViewKeyDict.commentscount));
				topic.setPrizecount(TopicRedisUtil.getInt(uid, ViewKeyDict.prizecount));
				topic.setWeight(getWeight(uid));
			} else {
				map.clear();
				map.put(ViewKeyDict.clickcount, 0);
				map.put(ViewKeyDict.collectcount, 0);
				map.put(ViewKeyDict.commentscount, 0);
				map.put(ViewKeyDict.prizecount, 0);
				flag = TopicRedisUtil.set(uid, map);
			}
			topic.setContent("");
			if (!flag) {
				return false;
			}
		}
		return true;
	}
	
	/**
	 * 计算权重值
	 * 
	 * @return
	 * @author YangGuang
	 * @date 2018年5月16日14:16:58
	 * @return Float
	 */
	public static Float getWeight(String uid) {
		Map<String, Float> map = new HashMap<String, Float>();
		map.put(ViewKeyDict.clickcount, SysConf.ClickcountPercent);
		map.put(ViewKeyDict.collectcount, SysConf.CollectcountPercent);
		map.put(ViewKeyDict.commentscount, SysConf.CommentscountPercent);
		map.put(ViewKeyDict.prizecount, SysConf.PrizecountPercent);
		return TopicRedisUtil.getWeight(uid, map);
	}
}
