package com.supergenius.web.front.life.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.genius.core.base.constant.BaseStrDict;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.SysConf;
import com.supergenius.global.constants.ViewKeyDict;
import com.supergenius.web.front.life.helper.ArticleHP;
import com.supergenius.web.front.life.helper.ContentHP;
import com.supergenius.web.front.life.helper.IndexHP;
import com.supergenius.web.front.life.helper.ProblemHP;
import com.supergenius.web.front.life.helper.TopicHP;
import com.supergenius.xo.life.entity.Article;
import com.supergenius.xo.life.entity.Content;
import com.supergenius.xo.life.entity.Photo;
import com.supergenius.xo.life.entity.Problem;
import com.supergenius.xo.life.entity.Topic;
import com.supergenius.xo.life.enums.ECatalogue;
import com.supergenius.xo.life.enums.EContent;
import com.supergenius.xo.life.service.CatalogueSO;

/**
 * 目录controller
 * 
 * @author YangGuang
 * @date 2018年5月14日18:31:35
 */
@Controller
public class CatalogueController extends BaseController {

	@Autowired
	CatalogueSO so;

	/**
	 * 跳转到相应的页面并对相应的页面展示相应的数据
	 * 
	 * @param model
	 * @param request
	 * @return
	 * @author YangGuang
	 * @Datetime 2018年5月15日10:58:39
	 */
	@RequestMapping(value = "/catalogue/{pcid:\\w+}/{cid:\\w+}", method = RequestMethod.GET)
	private String index(Map<String, Object> model, @PathVariable int cid, @PathVariable int pcid, HttpServletRequest request, HttpServletResponse response) {
		cid = IndexHP.redirectCid(cid);
		model.put(ViewKeyDict.cid, cid);
		model.put(ViewKeyDict.pcid, pcid);
		model.put(ViewKeyDict.catalogue, so.getOneByCid(cid));
		if (ECatalogue.get(cid) == ECatalogue.index) {// 首页
			return redirectPrefix + "/index";
		}
		// 效果检验
		if (ECatalogue.get(cid) == ECatalogue.test || ECatalogue.get(cid) == ECatalogue.stage) {
			return redirectPrefix + "/video/" + cid;
		}
		// 课程推荐
		if (ECatalogue.get(cid) == ECatalogue.course) {
			return redirectPrefix + "/course";
		}
		// 资料交流 专业匹配 大学优选 人生问答  行万里路
		if (ECatalogue.get(cid) == ECatalogue.material || ECatalogue.get(cid) == ECatalogue.major || ECatalogue.get(cid) == ECatalogue.university || ECatalogue.get(cid) == ECatalogue.answer || ECatalogue.get(cid) == ECatalogue.travel) {
			return redirectPrefix + "/problem/" + cid + "_0";
		}
		
		// 交流对话
		if (ECatalogue.get(cid) == ECatalogue.communication || ECatalogue.get(cid) == ECatalogue.watching || ECatalogue.get(cid) == ECatalogue.watching || ECatalogue.get(cid) == ECatalogue.side
				|| ECatalogue.get(cid) == ECatalogue.recommendation || ECatalogue.get(cid) == ECatalogue.worship || ECatalogue.get(cid) == ECatalogue.fantasy) {
			return "conversation";
		}

		// 火眼金睛
		if (ECatalogue.get(cid) == ECatalogue.insight) {
			return "insight";
		}
		
		// 思维拓展
		if (ECatalogue.get(cid) == ECatalogue.thinking) {
			Topic bean = TopicHP.getlastTopic(cid);
			model.put(ViewKeyDict.bean, bean);
			return redirectPrefix + "/topic/" + bean.getCid() + BaseStrDict.slash + bean.getOid();
		}

		// 人生宗旨、人生定位、人生路径
		if (ECatalogue.get(cid) == ECatalogue.purpose || ECatalogue.get(cid) == ECatalogue.Location || ECatalogue.get(cid) == ECatalogue.path) {
			Content content = ContentHP.getOneContent(EContent.html, cid);
			ContentHP.organized(content, model, request, response);
			ContentHP.freemarked(content, model, request);
			model.put(ViewKeyDict.bean, content);
			return "position";
		}

		IndexHP.handleCache(cid);
		// 家长责任
		if (ECatalogue.get(cid) == ECatalogue.duty) {
			Content studycontent = ContentHP.getOneContent(ViewKeyDict.studyid);
			Content content = ContentHP.getOneContent(ViewKeyDict.dutyid);
			List<Photo> bannerList = ContentHP.getbannerList(ECatalogue.get(cid));
			List<Article> articleList = ArticleHP.getFirstArticle(SysConf.FirstArticleSize, cid);
			ContentHP.organized(content, model, request, response);
			model.put(ViewKeyDict.bean, content);
			model.put(ViewKeyDict.self_study, studycontent);
			model.put(ViewKeyDict.bannerList, bannerList);
			model.put(ViewKeyDict.list, articleList);
			return "duty";
		}

		// 人生设计
		if (ECatalogue.get(cid) == ECatalogue.design) {
			List<Article> hotArticleList = ArticleHP.getHotArticles(SysConf.HotArticleSize, cid);
			List<Article> articleList = ArticleHP.getFirstArticle(SysConf.FirstArticleSize, cid);
			List<Content> adList = ContentHP.getContentList(EContent.ad, ECatalogue.get(cid));
			List<Problem> problemList = ProblemHP.getProblemList(0, SysConf.DesignProblemSize, cid, SysConf.ismember);
			model.put(ViewKeyDict.hotArticleList, hotArticleList);
			model.put(ViewKeyDict.list, articleList);
			model.put(ViewKeyDict.adList, adList);
			model.put(ViewKeyDict.problemList, problemList);
			return "design";
		}

		List<Article> articleList = ArticleHP.getFirstArticle(SysConf.FirstArticleSize, cid);// 文章
		List<Content> adList = ContentHP.getContentList(EContent.ad, ECatalogue.get(cid));// 广告位
		List<Photo> bannerList = ContentHP.getbannerList(ECatalogue.get(cid));
		model.put(ViewKeyDict.list, articleList);
		model.put(ViewKeyDict.adList, adList);
		model.put(ViewKeyDict.bannerList, bannerList);
		model.put(ViewKeyDict.pagesize, SysConf.LoadSize);
		model.put(ViewKeyDict.FirstLoadSize, SysConf.FirstArticleSize);
		// 留学指南、留学风向、留学天地
		if (ECatalogue.get(cid) == ECatalogue.abroadguide || ECatalogue.get(cid) == ECatalogue.abroadtrend || ECatalogue.get(cid) == ECatalogue.abroadworld) {
			return "abroad";
		}

		List<Article> hotArticleList = ArticleHP.getHotArticles(SysConf.HotArticleSize, cid);
		model.put(ViewKeyDict.hotArticleList, hotArticleList);
		// 别出心裁、课程见解、识破骗局、水煮历史、去伪存真、梦想成真、理想变迁、携手前行
		if (ECatalogue.get(cid) == ECatalogue.difference || ECatalogue.get(cid) == ECatalogue.perspectives || ECatalogue.get(cid) == ECatalogue.fraud || ECatalogue.get(cid) == ECatalogue.history
				|| ECatalogue.get(cid) == ECatalogue.technology || ECatalogue.get(cid) == ECatalogue.dream || ECatalogue.get(cid) == ECatalogue.changing || ECatalogue.get(cid) == ECatalogue.partner) {
			Content content = ContentHP.getOneContent(EContent.html, cid);
			ContentHP.freemarked(content, model, request);
			model.put(ViewKeyDict.bean, content);
			return "article";
		}
		// 别出心裁
		if (ECatalogue.get(cid) == ECatalogue.difference) {
			Content content = ContentHP.getOneContent(EContent.html, cid);
			ContentHP.freemarked(content, model, request);
			model.put(ViewKeyDict.bean, content);
			return "article";
		}
		return "";
	}

	/**
	 * 除首页的页面的下拉加载
	 * 
	 * @param model
	 * @param pagenum
	 * @param request
	 * @param cid
	 * @return
	 * @author YangGuang
	 */
	@RequestMapping(value = "/ajax/otherpage/catalogue/{cid:\\w+}", method = RequestMethod.GET)
	public String ajax_firstArticle(Map<String, Object> model, int pagenum, @PathVariable int cid, HttpServletRequest request) {
		List<Article> list = ArticleHP.getMoreArticle(pagenum, SysConf.LoadSize, cid);
		model.put(ViewKeyDict.list, list);
		model.put(ViewKeyDict.cid, cid);
		return "ajaxarticle";
	}

	/**
	 * 除首页的页面的加载文章
	 * 
	 * @param model
	 * @param pagenum
	 * @param request
	 * @param cid
	 * @return
	 * @author YangGuang
	 */
	@RequestMapping(value = "/ajax/article/catalogue/{cid:\\w+}", method = RequestMethod.GET)
	public String ajax_Article(Map<String, Object> model, int pagesize, int pagenum, @PathVariable int cid, HttpServletRequest request) {
		List<Article> list = IndexHP.getPagesMore(pagenum, cid, pagesize);
		model.put(ViewKeyDict.list, list);
		model.put(ViewKeyDict.cid, cid);
		return "ajaxarticle";
	}
}
