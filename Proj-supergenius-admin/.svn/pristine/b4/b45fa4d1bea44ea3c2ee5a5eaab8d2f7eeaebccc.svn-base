package com.supergenius.web.admin.finance.helper;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;

import com.genius.core.base.utils.FileUtil;
import com.genius.core.base.utils.StrUtil;
import com.genius.model.base.entity.Pager;
import com.genius.server.base.helper.BaseHP;
import com.supergenius.global.conf.SysConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.xo.common.constants.MapperDict;
import com.supergenius.xo.user.enums.EComment;
import com.supergenius.xo.user.service.CommentsSO;

/**
 * 评论HP
 * @author liushaomin
 */
public class CommentsHP extends BaseHP{
	
	private static CommentsSO so;

	private static CommentsSO getSO() {
		if (so == null) {
			so = (CommentsSO) spring.getBean(CommentsSO.class);
		}
		return so;
	}
	
	/**
	 * 查询话题时组织数据
	 * @return
	 * @author liushaomin
	 */
	public static Map<String, Object> query(Map<?, ?> model) {
		Pager pager = Pager.getNewInstance(model.get("page"), model.get("rows"));
		Map<String, Object> map = getParamMap(pager, model);
		if (StrUtil.isNotEmpty(model.get(ViewKeyDict.fromusername))) {
			map.put(MapperDict.fromusername + MapperDict.suffix_like_key, model.get(ViewKeyDict.fromusername).toString().trim());
		}
		if (StrUtil.isNotEmpty(model.get(ViewKeyDict.content))) {
			map.put(MapperDict.content + MapperDict.suffix_like_key, model.get(ViewKeyDict.content).toString().trim());
		}
		if (StrUtil.isNotEmpty(model.get(ViewKeyDict.channel))) {
			map.put(MapperDict.channel, model.get(ViewKeyDict.channel).toString().trim());
		}
		if (StrUtil.isNotEmpty(model.get(ViewKeyDict.createtimestart))) {
			String startTime = model.get(ViewKeyDict.createtimestart).toString().trim() + MapperDict.starttimeformat;
			map.put(MapperDict.createtimestart, startTime);
		}
		if (StrUtil.isNotEmpty(model.get(ViewKeyDict.createtimeend))) {
			String endTime = model.get(ViewKeyDict.createtimeend).toString().trim() + MapperDict.endtimeformat;
			map.put(MapperDict.createtimeend, endTime);
		}
		if (StrUtil.isNotEmpty(model.get(ViewKeyDict.status))) {
			map.put(MapperDict.status, model.get(ViewKeyDict.status).toString().trim());
		}
		map.put(MapperDict.type, EComment.comment);
		Map<String, Object> result = new HashMap<String, Object>();
		result.put(ViewKeyDict.total, getSO().getCount(map));
		result.put(ViewKeyDict.rows, getSO().getList(map));
		return result;
	}
	
	/**
	 * 删除序列化文件
	 * @param directory
	 * @param fromuid
	 */
	public static void deleteSerialFile(String directory, String fromuid) {
		FileUtil.delete(getSerialPath(directory, fromuid));
	}
	
	/**
	 * 获取序列化文件的路径
	 * @param directory
	 * @param uid 记录的uid
	 * @return
	 */
	private static String getSerialPath(String directory, String uid) {
		if (StringUtils.isEmpty(directory)) {
			directory = "others";
		}
		return SysConf.SerialBasePath + SysConf.SerialCommentPath + SysConf.Separator_Directory + directory + SysConf.Separator_Directory + uid + SysConf.dot + SysConf.SerialCommentsExt;
	}

}
