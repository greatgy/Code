package com.supergenius.web.admin.finance.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.annotation.Json;
import com.genius.server.base.controller.BaseController;
import com.genius.server.baseadmin.helper.AdminHP;
import com.supergenius.global.conf.UriConf;
import com.supergenius.server.common.constants.MsgKeyDict;
import com.supergenius.web.admin.finance.helper.DebateArticleHP;
import com.supergenius.xo.finance.entity.DebateArticle;
import com.supergenius.xo.finance.service.DebateArticleSO;

/**
 * 论战文章控制器
 * @author ShangJianguo
 */
@Controller
@RequestMapping(value = UriConf.baseAdminPath)
public class DebateArticleAdminer extends BaseController{
	
	@Autowired
	private DebateArticleSO so;
	
	/**
	 * 加载论战文章列表 
	 * @param model
	 * @param request
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = "/ajax/debatearticle/list", method = RequestMethod.GET)
	@ResponseBody
	public ResponseEntity<Map<String, Object>> debatearticle_list(Map<String, Object> model, HttpServletRequest request) {
		cloneParamsToModel(model, request);
		Map<String, Object> map = DebateArticleHP.query(model);
		return json(map, Json.webStrategy);
	}

	/**
	 * 添加论战文章
	 * @param debate
	 * @param file
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = "/ajax/debatearticle/add", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> debatearticle_add(String[] articles, String debateuid) {
		List<DebateArticle> articlesList = DebateArticleHP.getArticleList(articles, AdminHP.getAdminUid());
		for (DebateArticle item : articlesList) {
			item.setDebateuid(debateuid);
		}
		if (so.add(articlesList)) {
			return success();
		}
		return result(MsgKeyDict.addFailed);
	}
	
	/**
	 * 删除论战文章
	 * @param ids
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = "/ajax/debatearticle/delete", method = RequestMethod.POST)
	@ResponseBody
	public Map<String, Object> debatearticle_delete(String[] ids) {
		if(so.delete(ids)){
			return success();
		}else {
			return result(MsgKeyDict.addFailed);
		}
	}

}
