<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supergenius.xo.manager.dao.CertificateDao">

    <sql id="userinfotable">GUserDB2.userinfo</sql>
    <sql id="appreplytable">GManagerDB.appreply</sql>
    <sql id="experttable">GManagerDB.expert</sql>
    <sql id="judgetable">GManagerDB.judge </sql>
    <sql id="userinfoon">on `certificate`.`useruid` = userinfo.uid</sql>
    <sql id="appreplyon">on `certificate`.`refuid` = appreply.uid</sql>
    <sql id="experton">on `certificate`.`useruid` = expert.useruid</sql>
    <sql id="judgeon">on `certificate`.`useruid` = judge.useruid</sql>
    <sql id="setshowname_lk">userinfo.showname like CONCAT('%',#{keyword},'%')</sql>
    <sql id="setappreplysn_lk">appreply.sn like CONCAT('%',#{keyword},'%')</sql>
    <sql id="setexpertsn_lk">expert.sn like CONCAT('%',#{keyword},'%')</sql>
    <sql id="setjudgesn_lk">judge.sn like CONCAT('%',#{keyword},'%')</sql>
    
    <sql id="basecolumns">`certificate`.`uid`, `certificate`.`createtime` </sql>
    <sql id="othercolumns"><include refid="basecolumns"/>, `certificate`.`useruid`, `certificate`.`sn`, `certificate`.`refuid`, `certificate`.`major`, `certificate`.`type`, `certificate`.`imglittle`, `certificate`.`img`, `certificate`.`imgbig`,  `certificate`.`imgoriginal`, `certificate`.`desc`, `certificate`.`status` </sql>
    <sql id="allcolumns"><include refid="basecolumns"/>, <include refid="othercolumns"/>, `certificate`.`updatetime`</sql>
    <sql id="table">certificate</sql>
    <sql id="count">count(*)</sql>
    <sql id="distinctcount">count(distinct certificate.uid)</sql>
    <sql id="whereid">where `certificate`.`uid` = #{uid}</sql>
    <sql id="allfields"><include refid="othercolumns"/> </sql>
    <sql id="allparams">#{uid},#{createtime},#{useruid},#{sn},#{refuid},#{major},#{type},#{imglittle},#{img},#{imgbig},#{imgoriginal},#{desc},#{status}</sql>
    <sql id="setuseruid">`certificate`.`useruid` = #{useruid}</sql>
    <sql id="setsn">`certificate`.`sn` = #{sn}</sql>
    <sql id="setuid">`certificate`.uid = #{uid}</sql>
    <sql id="setrefuid">`certificate`.`refuid` = #{refuid}</sql>
    <sql id="setmajor">`certificate`.`major` = #{major}</sql>
    <sql id="settype">`certificate`.`type` = #{type}</sql>
    <sql id="setimglittle">`certificate`.`imglittle` = #{imglittle}</sql>
    <sql id="setimg">`certificate`.`img` = #{img}</sql>
    <sql id="setimgbig">`certificate`.`imgbig` = #{imgbig}</sql>
    <sql id="setimgoriginal">`certificate`.`imgoriginal` = #{imgoriginal}</sql>
    <sql id="setdesc">`certificate`.`desc` = #{desc}</sql>
    <sql id="setstatus">`certificate`.`status` = #{status}</sql>
    <sql id="allsets">set
            <include refid="setuseruid"/>,
            <include refid="setsn"/>,
            <include refid="setrefuid"/>,
            <include refid="setmajor"/>,
            <include refid="settype"/>,
            <include refid="setimglittle"/>,
            <include refid="setimg"/>,
            <include refid="setimgbig"/>,
            <include refid="setimgoriginal"/>,
            <include refid="setdesc"/>,
            <include refid="setstatus"/>
    </sql>
    <sql id="orderby">order by `certificate`.createtime</sql>

    <select id="get" parameterType="string" resultType="certificate">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <include refid="whereid"/>
    </select>

    <select id="getOne" parameterType="hashMap" resultType="certificate">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <where>
            <if test="uid != null">
                and <include refid="setuid"/>
            </if>         
            <if test="useruid != null">
                and <include refid="setuseruid"/>
            </if>
            <if test="sn != null">
                and <include refid="setsn"/>
            </if>
            <if test="refuid != null">
                and <include refid="setrefuid"/>
            </if>
            <if test="major != null">
                and <include refid="setmajor"/>
            </if>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
            <if test="imglittle != null">
                and <include refid="setimglittle"/>
            </if>
            <if test="img != null">
                and <include refid="setimg"/>
            </if>
            <if test="imgbig != null">
                and <include refid="setimgbig"/>
            </if>
            <if test="imgoriginal != null">
                and <include refid="setimgoriginal"/>
            </if>
            <if test="desc != null">
                and <include refid="setdesc"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
        <if test="typedesc != null">
        order by `type` DESC
        </if>
        LIMIT 0,1
    </select>

    <select id="getCount" parameterType="hashMap" resultType="int">
        select
        <include refid="count" />
        from
        <include refid="table"/>
        <where>
            <if test="useruid != null">
                and <include refid="setuseruid"/>
            </if>
            <if test="sn != null">
                and <include refid="setsn"/>
            </if>
            <if test="refuid != null">
                and <include refid="setrefuid"/>
            </if>
            <if test="major != null">
                and <include refid="setmajor"/>
            </if>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
            <if test="imglittle != null">
                and <include refid="setimglittle"/>
            </if>
            <if test="img != null">
                and <include refid="setimg"/>
            </if>
            <if test="imgbig != null">
                and <include refid="setimgbig"/>
            </if>
            <if test="imgoriginal != null">
                and <include refid="setimgoriginal"/>
            </if>
            <if test="desc != null">
                and <include refid="setdesc"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
    </select>
    
    <select id="searchCount" parameterType="hashMap" resultType="int">
        select
        <include refid="distinctcount" />
        from
        <include refid="table"/>
        left join
        <include refid="userinfotable"/>
        <include refid="userinfoon"/>
        left join 
        <include refid="appreplytable"/>
        <include refid="appreplyon"/>
        left join 
        <include refid="experttable"/>
        <include refid="experton"/>
        left join 
        <include refid="judgetable"/>
        <include refid="judgeon"/>
        <where>
        	<if test="keyword != null">
                ( <include refid="setshowname_lk"/>
                 or <include refid="setappreplysn_lk"/>
                 or <include refid="setexpertsn_lk"/>
                 or <include refid="setjudgesn_lk"/>
                 )
            </if>
            <if test="useruid != null">
                and <include refid="setuseruid"/>
            </if>
            <if test="sn != null">
                and <include refid="setsn"/>
            </if>
            <if test="refuid != null">
                and <include refid="setrefuid"/>
            </if>
            <if test="major != null">
                and <include refid="setmajor"/>
            </if>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
             <if test="type_in != null">
                and `type` in
                <foreach item="item" index="index" collection="type_in" open="(" separator="," close=")">
                	#{item}
                </foreach>
            </if>
            <if test="imglittle != null">
                and <include refid="setimglittle"/>
            </if>
            <if test="img != null">
                and <include refid="setimg"/>
            </if>
            <if test="imgbig != null">
                and <include refid="setimgbig"/>
            </if>
            <if test="imgoriginal != null">
                and <include refid="setimgoriginal"/>
            </if>
            <if test="desc != null">
                and <include refid="setdesc"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
    </select>

    <select id="getList" parameterType="hashMap" resultType="certificate">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <where>
            <if test="useruid != null">
                and <include refid="setuseruid"/>
            </if>
            <if test="sn != null">
                and <include refid="setsn"/>
            </if>
            <if test="refuid != null">
                and <include refid="setrefuid"/>
            </if>
            <if test="major != null">
                and <include refid="setmajor"/>
            </if>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
            <if test="type_in != null">
                and `type` in
                <foreach item="item" index="index" collection="type_in" open="(" separator="," close=")">
                	#{item}
                </foreach>
            </if>
            <if test="imglittle != null">
                and <include refid="setimglittle"/>
            </if>
            <if test="img != null">
                and <include refid="setimg"/>
            </if>
            <if test="imgbig != null">
                and <include refid="setimgbig"/>
            </if>
            <if test="imgoriginal != null">
                and <include refid="setimgoriginal"/>
            </if>
            <if test="desc != null">
                and <include refid="setdesc"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
        <!-- 处理orderby语句 -->
        <choose>
            <when test="orderBy != null">
                ${orderBy}
            </when>
            <otherwise>
                <include refid="orderby"/>
                <if test="ascDesc != null">
                    ${ascDesc}
                </if>
            </otherwise>
        </choose>
        <!-- 处理limit语句 -->
        <trim prefix="LIMIT" prefixOverrides=",">
            <if test="startIndex != null and pageSize != null">
                ${startIndex}
            </if>
            <if test="pageSize != null">
                , ${pageSize}
            </if>
        </trim>
    </select>
    
    <select id="searchList" parameterType="hashMap" resultType="certificate">
        select distinct certificate.uid,
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        left join
        <include refid="userinfotable"/>
        <include refid="userinfoon"/>
        left join 
        <include refid="appreplytable"/>
        <include refid="appreplyon"/>
        left join 
        <include refid="experttable"/>
        <include refid="experton"/>
        left join 
        <include refid="judgetable"/>
        <include refid="judgeon"/>
        <where>
        	<if test="keyword != null">
                ( <include refid="setshowname_lk"/>
                 or <include refid="setappreplysn_lk"/>
                 or <include refid="setexpertsn_lk"/>
                 or <include refid="setjudgesn_lk"/>
                 )
            </if>
            <if test="useruid != null">
                and <include refid="setuseruid"/>
            </if>
            <if test="sn != null">
                and <include refid="setsn"/>
            </if>
            <if test="refuid != null">
                and <include refid="setrefuid"/>
            </if>
            <if test="major != null">
                and <include refid="setmajor"/>
            </if>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
            <if test="type_in != null">
                and `type` in
                <foreach item="item" index="index" collection="type_in" open="(" separator="," close=")">
                	#{item}
                </foreach>
            </if>
            <if test="imglittle != null">
                and <include refid="setimglittle"/>
            </if>
            <if test="img != null">
                and <include refid="setimg"/>
            </if>
            <if test="imgbig != null">
                and <include refid="setimgbig"/>
            </if>
            <if test="imgoriginal != null">
                and <include refid="setimgoriginal"/>
            </if>
            <if test="desc != null">
                and <include refid="setdesc"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
        <!-- 处理orderby语句 -->
        <choose>
            <when test="orderBy != null">
                ${orderBy}
            </when>
            <otherwise>
                <include refid="orderby"/>
                <if test="ascDesc != null">
                    ${ascDesc}
                </if>
            </otherwise>
        </choose>
        <!-- 处理limit语句 -->
        <trim prefix="LIMIT" prefixOverrides=",">
            <if test="startIndex != null and pageSize != null">
                ${startIndex}
            </if>
            <if test="pageSize != null">
                , ${pageSize}
            </if>
        </trim>
    </select>

    <insert id="insert" parameterType="certificate">
        insert into
        <include refid="table"/>
        (<include refid="allfields"/>)
        values (
        <include refid="allparams"/>
        )
    </insert>

    <update id="update" parameterType="certificate">
        update
        <include refid="table"/>
        <include refid="allsets"/>
        <include refid="whereid"/>
    </update>

    <update id="updateFields" parameterType="hashMap">
        update
        <include refid="table"/>
        <set>
            <if test="useruid != null">
                <include refid="setuseruid"/>,
            </if>
            <if test="sn != null">
                <include refid="setsn"/>,
            </if>
            <if test="refuid != null">
                <include refid="setrefuid"/>,
            </if>
            <if test="major != null">
                <include refid="setmajor"/>
            </if>
            <if test="type != null">
                <include refid="settype"/>,
            </if>
            <if test="imglittle != null">
                <include refid="setimglittle"/>,
            </if>
            <if test="img != null">
                <include refid="setimg"/>,
            </if>
            <if test="imgbig != null">
                <include refid="setimgbig"/>,
            </if>
            <if test="imgoriginal != null">
                <include refid="setimgoriginal"/>
            </if>
            <if test="desc != null">
                <include refid="setdesc"/>,
            </if>
            <if test="status != null">
                <include refid="setstatus"/>
            </if>
        </set>
        <include refid="whereid"/>
    </update>

    <delete id="delete" parameterType="string">
        delete from
        <include refid="table"/>
        <include refid="whereid"/>
    </delete>

</mapper>

