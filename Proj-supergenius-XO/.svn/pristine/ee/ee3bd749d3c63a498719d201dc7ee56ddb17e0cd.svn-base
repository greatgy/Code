package com.supergenius.xo.finance.serviceimpl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.genius.core.base.utils.DateUtil;
import com.genius.core.base.utils.FileUtil;
import com.genius.model.base.entity.Pager;
import com.genius.model.base.enums.EStatus;
import com.genius.model.baseadmin.entity.AdminLog;
import com.genius.xo.baseadmin.service.AdminLogSO;
import com.genius.xo.baseadmin.serviceimpl.BaseSOImpl;
import com.supergenius.xo.common.constants.MapperDict;
import com.supergenius.xo.finance.dao.FinanceDao;
import com.supergenius.xo.finance.entity.Contributor;
import com.supergenius.xo.finance.entity.Finance;
import com.supergenius.xo.finance.enums.EFinance;
import com.supergenius.xo.finance.service.ContributorSO;
import com.supergenius.xo.finance.service.FinanceSO;
import com.supergenius.xo.user.dao.CommentsDao;

/**
 * 天财评论SOImpl
 * @author liushaomin
 */
@Service
public class FinanceSOImpl extends BaseSOImpl<Finance> implements FinanceSO{

	@Autowired
	private FinanceDao dao;
	@Autowired
	private CommentsDao commentsDao;
	
	@Override
	protected FinanceDao getDao() {
		return dao;
	}
	
	@Autowired
	private AdminLogSO adminLogSO;
	
	@Autowired
	private ContributorSO contributorSO;

	/* (non-Javadoc)
	 * @see com.genius.xo.base.serviceimpl.BaseSOImpl#get(java.lang.String)
	 * @author: ShangJianguo
	 * 2014-11-25 下午5:29:36
	 */
	@Override
	public Finance get(String id) {
		Map<String,Object> map = new HashMap<String, Object>();
		map.put(MapperDict.uid, id);
		Finance finance = dao.getOne(map);
		if (finance != null) {
			finance.setContributor(contributorSO.get(finance.getAuthoruid()));
		}
		return finance;
	}
	
	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#deleteByUids(java.lang.String[])
	 */
	@Override
	public boolean deleteByUids(String[] ids) {
		Map<String, Object> map = new HashMap<String, Object>();
		List<String> list = Arrays.asList(ids);
		map.put(MapperDict.uids, list);
		for (String str : list) {
			Finance finance = dao.get(str);
			if (finance.getImgoriginal() != null) {
				FileUtil.deleteImg(finance.getImgoriginal());
				FileUtil.deleteImg(finance.getImglittle());
				FileUtil.deleteImg(finance.getImgmedium());
				FileUtil.deleteImg(finance.getImgbig());
			}
		}
		dao.deleteByMap(map);
		Map<String, Object> map2 = getParamMap();
		map2.put(MapperDict.fromuids, ids);
		commentsDao.deleteByMap(map2);
		return true;
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#setTop(java.lang.String[], boolean)
	 */
	@Override
	public boolean setTop(String[] ids, boolean istop) {
		Map<String, Object> map = new HashMap<String, Object>();
		for (String id : ids) {
			map.put(MapperDict.uid, id);
			map.put(MapperDict.istop, istop);
			dao.updateFields(map);
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#setPublic(java.lang.String[], boolean)
	 */
	@Override
	public boolean setPublic(String[] ids, boolean ispublic) {
		Map<String, Object> map = new HashMap<String, Object>();
		for (String id : ids) {
			map.put(MapperDict.uid, id);
			map.put(MapperDict.ispublic, ispublic);
			dao.updateFields(map);
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#setRecommend(java.lang.String[], boolean)
	 */
	@Override
	public boolean setRecommend(String[] ids, boolean isrecommend) {
		Map<String, Object> map = new HashMap<String, Object>();
		for (String id : ids) {
			map.put(MapperDict.uid, id);
			map.put(MapperDict.isrecommend, isrecommend);
			dao.updateFields(map);
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getList(com.supergenius.xo.finance.enums.EFinance, com.genius.model.base.entity.Pager)
	 * @author: ShangJianguo
	 * 2014-10-28 上午10:34:17
	 */
	@Override
	public List<Finance> getList(EFinance type, Pager pager) {
		Map<String, Object> map = getParamMap(pager);
		if (type == null) {
			map.put(MapperDict.prefix_no_key + MapperDict.type, EFinance.debate);
		}else {
			map.put(MapperDict.type, type);
		}
		return dao.getList(map);
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getList(com.supergenius.xo.finance.enums.EFinance, boolean, com.genius.model.base.entity.Pager)
	 * @author: ShangJianguo
	 * 2014-10-28 上午11:06:11
	 */
	@Override
	public List<Finance> getList(boolean istop, Pager pager) {
		Map<String, Object> map = getParamMap(pager);
		map.put(MapperDict.istop, istop);
		return dao.getList(map);
	}
	
	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getList(boolean)
	 * @author: ShangJianguo
	 * 2014-10-28 上午10:34:17
	 */
	@Override
	public List<Finance> getList(boolean isrecommend) {
		Map<String, Object> map = getParamMap();
		map.put(MapperDict.isrecommend, isrecommend);
		return dao.getList(map);
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#get(int)
	 * @author: ShangJianguo
	 * 2014-10-28 下午12:18:04
	 */
	@Override
	public Finance get(int oid) {
		Map<String,Object> map = new HashMap<String, Object>();
		map.put(MapperDict.oid, oid);
		Finance finance = dao.getOne(map);
		if (finance != null) {
			finance.setContributor(contributorSO.get(finance.getAuthoruid()));
		}
		return finance;
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getList(java.lang.String, com.genius.model.base.enums.EStatus, com.genius.model.base.entity.Pager)
	 * @author: ShangJianguo
	 * 2014-10-31 下午1:48:48
	 */
	@Override
	public List<Finance> getList(String authoruid, EStatus status, Pager pager) {
		Map<String, Object> map = pager==null?getParamMap():getParamMap(pager);
		map.put(MapperDict.authoruid, authoruid);
		if (status != null) {
			map.put(MapperDict.status, status);
		}else {
			map.remove(MapperDict.status);
		}
		return dao.getList(map);
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getList(java.lang.String, com.genius.model.base.enums.EStatus, java.util.List, com.genius.model.base.entity.Pager)
	 * @author: ShangJianguo
	 * 2014-10-31 下午3:34:12
	 */
	@Override
	public List<Finance> getList(String authoruid, EStatus status, List<String> contributeUids, Pager pager) {
		if (contributeUids == null || contributeUids.size() == 0) {
			return new ArrayList<>();
		}
		Map<String, Object> map = null;
		if (pager == null) {
			map = getParamMap();
		}else {
			map = getParamMap(pager);
		}
		map.put(MapperDict.authoruid, authoruid);
		if (status != null) {
			map.put(MapperDict.status, status);
		}else {
			map.remove(MapperDict.status);
		}
		map.put(MapperDict.contributeuids, contributeUids);
		return dao.getList(map);
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getAuthorArticleCount(java.lang.String)
	 * @author: ShangJianguo
	 * 2014-11-4 上午10:58:48
	 */
	@Override
	public int getAuthorArticleCount(String authoruid) {
		Map<String, Object> map = getParamMap();
		map.put(MapperDict.authoruid, authoruid);
		return getCount(map);
	}
	
	/* (non-Javadoc)
	 * @see com.genius.xo.baseadmin.serviceimpl.BaseSOImpl#update(com.genius.model.baseadmin.entity.AdminLog, com.genius.model.base.enums.EStatus, java.lang.String[])
	 */
	@Override
	public boolean update(AdminLog log, EStatus status, String... ids) {
		HashMap<String, Object> map = new HashMap<>();
		for (String id : ids) {
			map.clear();
			map.put(MapperDict.uid, id);
			map.put(MapperDict.oid, id);
			map.put(MapperDict.status, status);
			Finance finance = dao.get(id);
			if (finance.getPublishtime().equals(MapperDict.initpublishtime)) {
				map.put(MapperDict.publishtime, status);	
			}
			getDao().updateFields(map);
			//操作成功
			log.setDataid(id);
			adminLogSO.add(log);
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getLastNext(java.lang.String)
	 * @author: ShangJianguo
	 * 2014-11-10 上午10:43:15
	 */
	@Override
	public Map<String, Object> getLastNext(Finance finance, EFinance type) {
		Map<String, Object> map = getParamMap();
		map.put(MapperDict.type, type);
		map.put(MapperDict.publishtimestartne, DateUtil.parseDateTime(finance.getPublishtime(), DateUtil.FORMAT_DATETIME_CHINA));
		map.put(MapperDict.orderBy, MapperDict.sql_order_by + MapperDict.publishtime + MapperDict.asc);
		map.put(MapperDict.status, EStatus.enable);
		Finance next = dao.getOne(map);
		map = getParamMap();
		map.put(MapperDict.publishtimeendne, DateUtil.parseDateTime(finance.getPublishtime(), DateUtil.FORMAT_DATETIME_CHINA));
		map.put(MapperDict.type, type);
		map.put(MapperDict.status, EStatus.enable);
		map.put(MapperDict.orderBy, MapperDict.sql_order_by + MapperDict.publishtime + MapperDict.desc);
		Finance last = dao.getOne(map);
		Map<String, Object> result = new HashMap<>();
		result.put(MapperDict.last, last);
		result.put(MapperDict.next, next);
		return result;
	}
	
	/* (non-Javadoc)
	 * @see com.genius.xo.base.serviceimpl.BaseSOImpl#getList()
	 */
	@Override
	public List<Finance> getList(Map<String, Object> map) {
		List<Finance> finances = dao.getList(map);
		for (Finance item : finances) {
			Contributor contributor = contributorSO.get(item.getAuthoruid()); 
			if (contributor != null) {
				item.setContributor(contributor);
			}
		}
		return finances;
	}

	/* (non-Javadoc)
	 * @see com.supergenius.xo.finance.service.FinanceSO#getList(java.util.List, com.genius.model.base.enums.EStatus, com.genius.model.base.entity.Pager)
	 * @author: ShangJianguo
	 * 2015-1-14 下午4:31:48
	 */
	@Override
	public List<Finance> getList(List<String> authoruids, EStatus status, Pager pager) {
		if (authoruids == null || authoruids.size() == 0) {
			return new ArrayList<>();
		}
		Map<String, Object> map = getParamMap(pager);
		map.put(MapperDict.authoruids, authoruids);
		map.put(MapperDict.state, status);
		return dao.getList(map);
	}

	@Override
	public Finance getOneByType(EFinance type) {
		Map<String, Object> map = getParamMap();
		map.put(MapperDict.type, type);
		return dao.getOne(map);
	}
	
	/**
	 * 通过类型获取文章数量
	 * @author 许志翔   
	 */
	@Override
	public int getCount(EFinance type) {

		Map<String, Object> map = getParamMap();
		map.put(MapperDict.type, type);
		return dao.getCount(map);
	}

}
