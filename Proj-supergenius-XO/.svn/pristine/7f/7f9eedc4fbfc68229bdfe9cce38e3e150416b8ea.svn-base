<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supergenius.xo.finance.dao.TopicGuestDao">
	
	
	<sql id="basecolumns">`uid`,`createtime`</sql>
	<sql id="othercolumns">`useruid`, `topicuid`, `name`, `state`, `status`, `updatetime`</sql>
	<sql id="allcolumns"><include refid="basecolumns"/>, <include refid="othercolumns"/></sql>
	<sql id="table">topicguest</sql>
	<sql id="whereid">where uid = #{uid}</sql>
	<sql id="allfields"><include refid="basecolumns"/>, <include refid="othercolumns"/></sql>
	<sql id="allparams">#{uid},#{createtime},#{useruid},#{topicuid},#{name},#{state},#{status},#{updatetime}</sql>
	<sql id="count">count(*)</sql>
	<sql id="setuid">uid = #{uid}</sql>
	<sql id="setuseruid">useruid = #{useruid}</sql>
	<sql id="settopicuid">topicuid = #{topicuid}</sql>
	<sql id="setname">name = #{name}</sql>
	<sql id="setstate">state = #{state}</sql>
	<sql id="setstatus">status = #{status}</sql>
	<sql id="allsets">set 
    <include refid="setuid"/>,
	<include refid="setuseruid"/>,
	<include refid="settopicuid"/>,
	<include refid="setname"/>,
	<include refid="setstate"/>,
	<include refid="setstatus"/></sql>
	<sql id="orderby">order by createtime</sql>
	
	<select id="get" parameterType="string" resultType="topicguest">
		select
		<include refid="allcolumns" />
		from
		<include refid="table"/>
		<include refid="whereid"/>
	</select>
	
	<select id="getOne" parameterType="hashMap" resultType="topicguest">
		select
		<include refid="allcolumns" />
		from
		<include refid="table"/>
		<where>
			<if test="uid != null">
				and <include refid="setuid"/>
			</if>
		</where>
		LIMIT 0,1
	</select>
	
	<select id="getCount" parameterType="hashMap" resultType="int">
		select
		<include refid="count" />
		from
		<include refid="table"/>
		<where>
			<if test="uid != null">
				and <include refid="setuid"/>
			</if>
			<if test="useruid != null">
				and <include refid="setuseruid"/>
			</if>
			<if test="topicuid != null">
				and <include refid="settopicuid"/>
			</if>
			<if test="name != null">
				and <include refid="setname"/>
			</if>
			<if test="state != null">
				and <include refid="setstate"/>
			</if>
			<if test="status != null">
				and <include refid="setstatus"/>
			</if>
		</where>
	</select>
	
	<select id="getList" parameterType="hashMap" resultType="topicguest">
		select
		<include refid="allcolumns" />
		from
		<include refid="table"/>
		<where>
			<if test="uid != null">
				and <include refid="setuid"/>
			</if>
			<if test="useruid != null">
				and <include refid="setuseruid"/>
			</if>
			<if test="topicuid != null">
				and <include refid="settopicuid"/>
			</if>
			<if test="name != null">
				and <include refid="setname"/>
			</if>
			<if test="state != null">
				and <include refid="setstate"/>
			</if>
			<if test="status != null">
				and <include refid="setstatus"/>
			</if>
		</where>
		<!-- 处理orderby语句 -->
		<choose>
			<when test="orderBy != null">
				${orderBy}
			</when>
			<otherwise>
				<include refid="orderby"/>
				<if test="ascDesc != null">
					${ascDesc}
				</if>
			</otherwise>
		</choose>
		<!-- 处理limit语句 -->
		<trim prefix="LIMIT" prefixOverrides=",">
			<if test="startIndex != null and pageSize != null">
				${startIndex}
			</if>
			<if test="pageSize != null">
			 , ${pageSize}
			 </if>
		</trim>
	</select>
	
	<insert id="insert" parameterType="topicguest">
		<selectKey resultType="int" keyProperty="oid">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into
		<include refid="table"/>
		(<include refid="allfields"/>)
		values (
			<include refid="allparams"/>
		)
	</insert>
	
	<update id="update" parameterType="topicguest">
		update
		<include refid="table"/>
		<include refid="allsets"/>
		<include refid="whereid"/>
	</update>

	<update id="updateFields" parameterType="hashMap">
		update
		<include refid="table"/>
		<set>
			<if test="useruid != null">
				 <include refid="setuseruid"/>,
			</if>
			<if test="topicuid != null">
				 <include refid="settopicuid"/>,
			</if>
			<if test="name != null">
				 <include refid="setname"/>,
			</if>
			<if test="state != null">
				 <include refid="setstate"/>,
			</if>
			<if test="status != null">
				 <include refid="setstatus"/>,
			</if>
		</set>
			<if test="uid != null">
				<include refid="whereid"/>
			</if>
	</update>
	
	<delete id="delete" parameterType="string">
		delete from
		<include refid="table"/>
		<include refid="whereid"/>
	</delete>
	
	<delete id="deleteByMap" parameterType="hashMap">
		delete from
		<include refid="table"/>
		<where>
			<if test="uid != null">
				and <include refid="setuid"/>
			</if>
			<if test="useruid != null">
				and <include refid="setuseruid"/>
			</if>
			<if test="topicuid != null">
				and <include refid="settopicuid"/>
			</if>
			<if test="name != null">
				and <include refid="setname"/>
			</if>
			<if test="state != null">
				and <include refid="setstate"/>
			</if>
			<if test="status != null">
				and <include refid="setstatus"/>
			</if>
		</where>
	</delete>
</mapper>