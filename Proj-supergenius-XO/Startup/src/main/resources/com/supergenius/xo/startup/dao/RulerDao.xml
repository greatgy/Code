<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supergenius.xo.startup.dao.RulerDao">

    <sql id="basecolumns">`uid`, `createtime` </sql>
    <sql id="othercolumns">`type`, `name`, `rejectmincount`, `rejectmaxcount`, `minscore`, `maxscore`, `isinit`, `content`, `adminuid`, `status` </sql>
    <sql id="allcolumns"><include refid="basecolumns"/>, <include refid="othercolumns"/>, `updatetime`</sql>
    <sql id="table">ruler</sql>
    <sql id="count">count(*)</sql>
    <sql id="whereid">where uid = #{uid}</sql>
    <sql id="allfields"><include refid="basecolumns"/>, <include refid="othercolumns"/> </sql>
    <sql id="allparams">#{uid},#{createtime},#{type},#{name},#{rejectmincount},#{rejectmaxcount},#{minscore},#{maxscore},#{isinit},#{content},#{adminuid},#{status}</sql>
    <sql id="settype">`type` = #{type}</sql>
    <sql id="setname">`name` = #{name}</sql>
    <sql id="setname_lk">`name` like CONCAT('%', #{name_lk}, '%')</sql>
    <sql id="setrejectmincount">`rejectmincount` = #{rejectmincount}</sql>
    <sql id="setrejectmaxcount">`rejectmaxcount` = #{rejectmaxcount}</sql>
    <sql id="setminscore">`minscore` = #{minscore}</sql>
    <sql id="setmaxscore">`maxscore` = #{maxscore}</sql>
    <sql id="setcontent">`content` = #{content}</sql>
    <sql id="setadminuid">`adminuid` = #{adminuid}</sql>
    <sql id="setisinit">`isinit` = #{isinit}</sql>
    <sql id="setstatus">`status` = #{status}</sql>
    <sql id="allsets">set
            <include refid="settype"/>,
            <include refid="setname"/>,
            <include refid="setrejectmincount"/>,
            <include refid="setrejectmaxcount"/>,
            <include refid="setminscore"/>,
            <include refid="setmaxscore"/>,
            <include refid="setcontent"/>,
            <include refid="setadminuid"/>,
             <include refid="setisinit"/>,
            <include refid="setstatus"/>
    </sql>
    <sql id="orderby">order by createtime</sql>

    <select id="get" parameterType="string" resultType="Ruler">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <include refid="whereid"/>
    </select>

    <select id="getOne" parameterType="hashMap" resultType="Ruler">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <where>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
            <if test="name != null">
                and <include refid="setname"/>
            </if>
            <if test="name_lk != null">
                and <include refid="setname_lk"/>
            </if>
            <if test="sum != null">
                and #{sum} &gt;= minscore and #{sum} &lt; maxscore
            </if>
            <if test="count != null">
                and #{count} &gt;= rejectmincount and #{count} &lt;= rejectmaxcount
            </if>
            <if test="minscore != null">
                and <include refid="setminscore"/>
            </if>
            <if test="maxscore != null">
                and <include refid="setmaxscore"/>
            </if>
            <if test="rejectmincount != null">
                and <include refid="setrejectmincount"/>
            </if>
            <if test="rejectmaxcount != null">
                and <include refid="setrejectmaxcount"/>
            </if>
            <if test="content != null">
                and <include refid="setcontent"/>
            </if>
            <if test="adminuid != null">
                and <include refid="setadminuid"/>
            </if>
            <if test="isinit != null">
                and <include refid="setisinit"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
        LIMIT 0,1
    </select>

    <select id="getCount" parameterType="hashMap" resultType="int">
        select
        <include refid="count" />
        from
        <include refid="table"/>
        <where>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
            <if test="name != null">
                and <include refid="setname"/>
            </if>
            <if test="name_lk != null">
                and <include refid="setname_lk"/>
            </if>
            <if test="sum != null">
                and #{sum} &gt;= minscore and #{sum} &lt; maxscore
            </if>
            <if test="count != null">
                and #{count} &gt;= rejectmincount and #{count} &lt;= rejectmaxcount
            </if>
            <if test="minscore != null">
                and <include refid="setminscore"/>
            </if>
            <if test="maxscore != null">
                and <include refid="setmaxscore"/>
            </if>
            <if test="rejectmincount != null">
                and <include refid="setrejectmincount"/>
            </if>
            <if test="rejectmaxcount != null">
                and <include refid="setrejectmaxcount"/>
            </if>
            <if test="content != null">
                and <include refid="setcontent"/>
            </if>
            <if test="adminuid != null">
                and <include refid="setadminuid"/>
            </if>
            <if test="isinit != null">
                and <include refid="setisinit"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
    </select>

    <select id="getList" parameterType="hashMap" resultType="Ruler">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <where>
            <if test="type != null">
                and <include refid="settype"/>
            </if>
            <if test="name != null">
                and <include refid="setname"/>
            </if>
            <if test="name_lk != null">
                and <include refid="setname_lk"/>
            </if>
            <if test="sum != null">
                and #{sum} &gt;= minscore and #{sum} &lt; maxscore
            </if>
            <if test="count != null">
                and #{count} &gt;= rejectmincount and #{count} &lt;= rejectmaxcount
            </if>
            <if test="minscore != null">
                and <include refid="setminscore"/>
            </if>
            <if test="maxscore != null">
                and <include refid="setmaxscore"/>
            </if>
            <if test="rejectmincount != null">
                and <include refid="setrejectmincount"/>
            </if>
            <if test="rejectmaxcount != null">
                and <include refid="setrejectmaxcount"/>
            </if>
            <if test="adminuid != null">
                and <include refid="setadminuid"/>
            </if>
            <if test="isinit != null">
                and <include refid="setisinit"/>
            </if>
            <if test="status != null">
                and <include refid="setstatus"/>
            </if>
        </where>
        <!-- 处理orderby语句 -->
        <choose>
            <when test="orderBy != null">
                ${orderBy}
            </when>
            <otherwise>
                <include refid="orderby"/>
                <if test="ascDesc != null">
                    ${ascDesc}
                </if>
            </otherwise>
        </choose>
        <!-- 处理limit语句 -->
        <trim prefix="LIMIT" prefixOverrides=",">
            <if test="startIndex != null and pageSize != null">
                ${startIndex}
            </if>
            <if test="pageSize != null">
                , ${pageSize}
            </if>
        </trim>
    </select>

    <insert id="insert" parameterType="Ruler">
        insert into
        <include refid="table"/>
        (<include refid="allfields"/>)
        values (
        <include refid="allparams"/>
        )
    </insert>

    <update id="update" parameterType="Ruler">
        update
        <include refid="table"/>
        <include refid="allsets"/>
        <include refid="whereid"/>
    </update>

    <update id="updateFields" parameterType="hashMap">
        update
        <include refid="table"/>
        <set>
            <if test="type != null">
                <include refid="settype"/>,
            </if>
            <if test="name != null">
                <include refid="setname"/>,
            </if>
            <if test="rejectmincount != null">
                <include refid="setrejectmincount"/>,
            </if>
            <if test="rejectmaxcount != null">
                <include refid="setrejectmaxcount"/>,
            </if>
            <if test="minscore != null">
                <include refid="setminscore"/>,
            </if>
            <if test="maxscore != null">
                <include refid="setmaxscore"/>,
            </if>
            <if test="content != null">
                <include refid="setcontent"/>,
            </if>
            <if test="adminuid != null">
                <include refid="setadminuid"/>,
            </if>
            <if test="isinit != null">
                <include refid="setisinit"/>,
            </if>
            <if test="status != null">
                <include refid="setstatus"/>
            </if>
        </set>
        <include refid="whereid"/>
    </update>

    <delete id="delete" parameterType="string">
        delete from
        <include refid="table"/>
        <include refid="whereid"/>
    </delete>

	<update id="updateByUids" parameterType="hashMap">
		update
		<include refid="table"/>
		<set>
			<if test="status != null">
                <include refid="setstatus"/>
            </if>
		</set>
		<where>
			<if test="uids != null">
				and `uid` in 
				<foreach item="item" index="index" collection="uids" open="(" separator="," close=")">
                 	 #{item}
            	</foreach>
			</if>
		</where>
	</update>
</mapper>

