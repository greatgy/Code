package com.supergenius.web.finance.helper;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.genius.model.base.entity.Pager;
import com.genius.server.base.helper.BaseHP;
import com.supergenius.global.conf.SysConf;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.user.helper.BaseUserConfigHP;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.xo.common.constants.MapperDict;
import com.supergenius.xo.common.enums.EChannel;
import com.supergenius.xo.finance.entity.Inbox;
import com.supergenius.xo.finance.entity.Message;
import com.supergenius.xo.finance.enums.EFinanceMsg;
import com.supergenius.xo.finance.service.FinanceSO;
import com.supergenius.xo.finance.service.InboxSO;
import com.supergenius.xo.finance.service.TopicSO;
import com.supergenius.xo.user.entity.Comments;
import com.supergenius.xo.user.entity.User;
import com.supergenius.xo.user.service.CommentsSO;

/**
 * 收件箱HP
 * 
 * @author LiJiacheng
 */
public class InboxHP extends BaseHP {

	private static Logger log = LoggerFactory.getLogger(InboxHP.class);

	private static InboxSO inboxSO;

	private static FinanceSO financeSO;

	private static TopicSO topicSO;

	private static CommentsSO commentsSO;

	private static InboxSO getInboxSO() {
		if (inboxSO == null) {
			inboxSO = (InboxSO) spring.getBean(InboxSO.class);
		}
		return inboxSO;
	}

	private static FinanceSO getFinanceSO() {
		if (financeSO == null) {
			financeSO = (FinanceSO) spring.getBean(FinanceSO.class);
		}
		return financeSO;
	}

	private static TopicSO getTopicSO() {
		if (topicSO == null) {
			topicSO = (TopicSO) spring.getBean(TopicSO.class);
		}
		return topicSO;
	}

	private static CommentsSO getCommentsSO() {
		if (commentsSO == null) {
			commentsSO = (CommentsSO) spring.getBean(CommentsSO.class);
		}
		return commentsSO;
	}

	/**
	 * 获取指定useruid的Inbox中的内容，并且级联查询Message和User
	 * 
	 * @param user
	 * @param pager
	 * @return
	 * @author LiJiacheng
	 */
	public static List<Inbox> getUserInboxs(User user, Pager pager, EFinanceMsg[] type) {
		List<Inbox> inboxs = getInboxSO().getUserInboxs(user.getUid(), pager, type);
		for (Inbox inbox : inboxs) {
			getInboxSO().getMessageAndUserByInbox(inbox);
		}
		getInboxSO().updateReadInbox(inboxs);
		if (inboxs.size() != 0) {
			int i = Integer.parseInt(inboxs.get(0).getType().toString());
			if (i == 0) {
				BaseUserConfigHP.addUserIgnoreMsgCount(user.getOid(), SysConf.getUserIgnoreFilePath(), MapperDict.sysmsgcount, EChannel.finance.name());
			} else if (i >= 1 && i <= 3) {
				BaseUserConfigHP.addUserIgnoreMsgCount(user.getOid(), SysConf.getUserIgnoreFilePath(), MapperDict.cmtmsgcount, EChannel.finance.name());
			} else {
				BaseUserConfigHP.addUserIgnoreMsgCount(user.getOid(), SysConf.getUserIgnoreFilePath(), MapperDict.ntemsgcount, EChannel.finance.name());
			}
		}
		return inboxs;
	}

	/**
	 * 处理列表获取总页数
	 * 
	 * @param user
	 * @param types
	 * @return
	 * @author LiJiacheng
	 */
	public static int getPageCount(List<Inbox> inboxs) {
		return (int) Math.ceil(inboxs.size() % WebConf.MsgPageSize == 0 ? inboxs.size() / WebConf.MsgPageSize : inboxs.size() / WebConf.MsgPageSize + 1);
	}

	/**
	 * 向收件箱发送消息(评论、点赞)
	 * 
	 * @param message
	 * @param comments
	 * @author LiJiacheng
	 */
	public static void sendInbox(Message message, Comments comments) {
		if (message != null) {
			if (comments.getTouseruid() != null) {
				message.setRecipient(comments.getTouseruid());
			} else {
				if (comments.getChannel().equals(EChannel.finance)) {
					message.setRecipient(getFinanceSO().get(comments.getFromuid()).getAuthoruid());
				} else if (comments.getChannel().equals(EChannel.topic)) {
					message.setRecipient(getTopicSO().get(comments.getFromuid()).getUseruid());
				} else if (comments.getChannel().equals(EChannel.comments)) {
					message.setRecipient(getCommentsSO().get(comments.getFromuid()).getFromuseruid());
				}
			}
			sendInboxByMsg(message);
		}
	}

	/**
	 * 向收件箱中发送inbox，仅根据message,并修改用户忽略消息文件中新消息的数量
	 * 
	 * @param message
	 * @author LiJiacheng
	 */
	public static void sendInboxByMsg(Message message) {
		boolean flag = false;
		if (message.getRecipient() != null) {
			flag = getInboxSO().addInbox(message);
		}
		if (flag == false) {
			log.info("Message add success, but the inbox send failed. the messageuid is:" + message.getUid());
		} else {
			int i = Integer.parseInt(message.getType().toString());
			User user = BaseUserHP.get(message.getRecipient());
			if (user == null) {//如果需要给游客发信息，则需要再取出contributor，给该游客发送，只需要给游客发送邮件就行
				log.info("Message add success, but the inbox needn't send, because it's a visitor!");
			} else {
				if (i >= 1 && i <= 3) {
					BaseUserConfigHP.updateUserIgnoreMsgFile(user.getOid(), SysConf.getUserIgnoreFilePath(), MapperDict.cmtmsgcount, EChannel.finance.name());
				} else if (i == 0) {
					BaseUserConfigHP.updateUserIgnoreMsgFile(user.getOid(), SysConf.getUserIgnoreFilePath(), MapperDict.sysmsgcount, EChannel.finance.name());
				} else {
					BaseUserConfigHP.updateUserIgnoreMsgFile(user.getOid(), SysConf.getUserIgnoreFilePath(), MapperDict.ntemsgcount, EChannel.finance.name());
				}
			}
		}
	}

}
