package com.supergenius.web.finance.api;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.annotation.Json;
import com.genius.core.base.utils.JsonUtil;
import com.genius.server.base.controller.BaseController;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.web.finance.helper.CommentsHP;
import com.supergenius.web.finance.helper.FinanceHP;
import com.supergenius.web.finance.helper.UserHP;
import com.supergenius.xo.common.enums.EChannel;
import com.supergenius.xo.finance.entity.Finance;
import com.supergenius.xo.user.entity.Comments;
import com.supergenius.xo.user.entity.User;
import com.supergenius.xo.user.enums.EComment;
import com.supergenius.xo.user.service.CommentsSO;

/** 
* app评论相关
* @author chenminchang
* @date 2017年1月5日 下午4:50:44 
*/
@Controller
public class CommentInterfacer extends BaseController {

	@Autowired
	CommentsSO commentsSO;
	/**
	 * 加载文章详情页的评论
	 * @param request
	 * @param channel
	 * @param oid
	 * @param num
	 * @return
	 * @author chenminchang
	 * @create 2017年1月9日上午10:52:21
	 */
	@RequestMapping(value = {"/api/comment/article/{channel:[a-z]+}/{oid:\\d+}"})
	@ResponseBody
	public String comment_article(HttpServletRequest request, @PathVariable String channel, @PathVariable int oid, Integer num) {
		Map<String, Object> resultMap = new HashMap<>();
		Finance finance = FinanceHP.getSerialize(oid);
		if (finance != null) {
			EChannel eChannel = EChannel.get(channel);
			List<Comments> list = new ArrayList<>();
			if (num == null || num <= 0) {
				num = 1;
			}
			User user = BaseUserHP.getCurrUser(request);
			list = CommentsHP.getCommentList(eChannel, finance.getUid(), -1, num);
			List<String> prizes = UserHP.getListPrize(user);
			if (prizes != null) {
				for (Comments comments : list) {
					for (String item : prizes) {
						if (comments.getUid().equals(item)) {
							comments.setIsprize(true);
							break;
						}
					}
					for (Comments comment : comments.getReplys()) {
						for (String item : prizes) {
							if (comment.getUid().equals(item)) {
								comment.setIsprize(true);
								break;
							}
						}
					}
				}
			}
			int conmmentsCount = commentsSO.getCommentsCount(null, EComment.comment, eChannel, finance.getUid());
			int prizesCount = commentsSO.getCommentsCount(null, EComment.praise, eChannel, finance.getUid());
			resultMap.put(ViewKeyDict.countCollect, conmmentsCount);
			resultMap.put(ViewKeyDict.countPrize, prizesCount);
			resultMap.put(ViewKeyDict.list, list);
			return JsonUtil.toJson(resultMap, Json.webStrategy);
		}
		return null;
	}
}
