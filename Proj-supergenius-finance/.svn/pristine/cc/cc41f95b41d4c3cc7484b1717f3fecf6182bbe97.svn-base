package com.supergenius.web.finance.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.utils.CookieUtil;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.SysConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.web.finance.helper.DebateHP;
import com.supergenius.xo.common.enums.ECommentConfig;
import com.supergenius.xo.finance.entity.Debate;
import com.supergenius.xo.finance.service.DebateSO;
import com.supergenius.xo.server.helper.BaseUserHP;
import com.supergenius.xo.user.entity.Comments;
import com.supergenius.xo.user.entity.User;
import com.supergenius.xo.user.service.CommentsSO;

/**
 * 论战控制器
 *
 * @author ShangJianguo
 */
@Controller
public class DebateController extends BaseController {
	
	@Autowired
	DebateSO so;
	
	@Autowired	
	CommentsSO commentsSO;
	
	/**
	 * 论战主页
	 * @param model
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value="/debate", method=RequestMethod.GET)
	public String debate(Map<String, Object> model){
		Debate debate = DebateHP.getCurDebate();
		// 论战排行榜
		List<Debate> rankList = DebateHP.getListByDebateRankFromComments();
		if (debate != null) {
			List<Debate> hisList = DebateHP.getHistoryDebate(debate.getUid(), 1);
			model.put(ViewKeyDict.list, hisList);
		}
		model.put(ViewKeyDict.bean, debate);
		model.put(ViewKeyDict.debaterank, rankList);
		model.put(ViewKeyDict.list2, DebateHP.getRankUser());
		return "debate";
	}

	/**
	 * 往期论战加载更多
	 * @param model
	 * @param uid
	 * @param pagenum
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value="/ajax/debate/{uid:.{32}}", method=RequestMethod.GET)
	public String debate_loadmore(Map<String, Object> model, @PathVariable String uid,Integer pagenum){
		if (pagenum == null || pagenum < 1) {
			pagenum = 1;
		}
		List<Debate> hisList = DebateHP.getHistoryDebate(uid, pagenum);
		model.put(ViewKeyDict.list, hisList);
		return "ajaxhistorydebate";
	}
	
	/**
	 * 论战详情页
	 * @param model
	 * @param id
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value="/debate/{id:\\d+}", method=RequestMethod.GET)
	public String debate_view(Map<String, Object> model,@PathVariable int id, HttpServletResponse response){
		Debate debate = so.get(id);
		if (debate == null) {
			return response404(response);
		}
		debate = DebateHP.setArticles(debate);
		Map<String, Object> map = DebateHP.getCommentUser(debate.getUid());
		model.put(ViewKeyDict.bean, debate);
		model.put(ViewKeyDict.map, map);
		return "debateoid";
	}	
	
	/**
	 * 投票
	 * @param uid 论战uid
	 * @param isred 是否是红方
	 * @return
	 * @author ShangJianguo
	 */
	@ResponseBody
	@RequestMapping(value="/debate/vote/{uid:.{32}}", method=RequestMethod.GET)
	public Map<String, Object> debate_vote(@PathVariable String uid, boolean isred, HttpServletRequest request, HttpServletResponse response){
		User user = BaseUserHP.getCurrUser(request);
		Map<String, Object> resultmap = new HashMap<String, Object>();
		if (user != null) {
			Comments hisComments = commentsSO.get(uid, user.getUid(),SysConf.FinanceDebateVoteHour);
			if (hisComments != null) {// 投过票
				resultmap.put(ViewKeyDict.success, false);
				resultmap.put(ViewKeyDict.voted, true);
				if (ECommentConfig.debatered.ismatch(hisComments.getConfig())) {
					resultmap.put(ViewKeyDict.isred, true);
				}else {
					resultmap.put(ViewKeyDict.isred, false);
				}
				return resultmap;
			}
		}else {
			String cookie = CookieUtil.get(request, ViewKeyDict.finance_debate_vote+uid);
			if (StringUtils.isNotEmpty(cookie)) {
				// 已经投过票
				resultmap.put(ViewKeyDict.success, false);
				resultmap.put(ViewKeyDict.voted, true);
				if ("0".equals(cookie.trim())) {
					resultmap.put(ViewKeyDict.isred, true);
					return resultmap;
				}else if ("1".equals(cookie)) {
					resultmap.put(ViewKeyDict.isred, false);
					return resultmap;
				}
			}
		}
		boolean result = DebateHP.vote(uid, isred, user);
		if (result && user == null) {// 投票成功并且为匿名用户
			String value = "";
			if (isred) {
				value = "0";
			}else {
				value = "1";
			}
			CookieUtil.addCookie(response, ViewKeyDict.finance_debate_vote + uid, value, SysConf.FinanceDebateVoteExpire);
		}
		resultmap.put(ViewKeyDict.success, result);
		return resultmap;
	}
	
	/**
	 * 进入专题论战
	 * @param model
	 * @param uid
	 * @param response
	 * @return
	 * @author liushaomin
	 */
	@RequestMapping(value="/indexdebate/{uid:.{32}}", method=RequestMethod.GET)
	public String indexdebate(Map<String, Object> model, @PathVariable String uid, HttpServletResponse response){
		Debate debate = so.get(uid);
		if (debate != null) {
			model.put(ViewKeyDict.bean, debate);
			return "indexdebate";
		}
		return response404(response);
	}

}
