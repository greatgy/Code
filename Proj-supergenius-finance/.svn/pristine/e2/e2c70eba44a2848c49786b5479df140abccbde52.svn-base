package com.supergenius.web.finance.api;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.collections.map.HashedMap;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.annotation.Json;
import com.genius.core.base.utils.JsonUtil;
import com.genius.model.base.entity.Pager;
import com.genius.model.base.enums.EStatus;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.web.finance.helper.FinanceHP;
import com.supergenius.xo.finance.entity.Contribute;
import com.supergenius.xo.finance.entity.Finance;
import com.supergenius.xo.finance.enums.EContributeState;
import com.supergenius.xo.finance.enums.EFinance;
import com.supergenius.xo.finance.service.ContributeSO;
import com.supergenius.xo.finance.service.FinanceSO;
import com.supergenius.xo.user.entity.User;

/**
 * 我的文章Controller
 * @author YangGuang
 * @date 
 */

public class MyArticleInterface extends BaseController {
	
	@Autowired
	private ContributeSO so;
	
	/**
	 * 我的文章
	 * @param model
	 * @param request
	 * @return
	 * @author YangGuang
	 * 
	 */
	@RequestMapping(value = { "/api/user/{uid:.{32}}/articles" }, method = RequestMethod.GET)
	@ResponseBody
	private String my_article(HttpServletRequest request, @PathVariable String uid) {
		Map<String, Object> myArticle = new HashMap<>();
		Map<String, Object> articles = new HashMap<>();
		User user = BaseUserHP.get(uid);
		if(user == null) {
			return null;
		}
		List<Contribute> rejectedContribute = so.getList(user.getUid(), EContributeState.refuse, Pager.getNewInstance(1, WebConf.FinancePageSize));
		List<Contribute> approvingContribute = so.getList(user.getUid(), EContributeState.init, Pager.getNewInstance(1, WebConf.FinancePageSize));
		List<Contribute> publishedContribute = so.getList(user.getUid(), EContributeState.accept, Pager.getNewInstance(1, WebConf.FinancePageSize));
		List<Finance> published = FinanceHP.getEContributeStateFinances(publishedContribute);
		List<Finance> approving = FinanceHP.getEContributeStateFinances(approvingContribute);
		List<Finance> rejected = FinanceHP.getEContributeStateFinances(rejectedContribute);
		articles.put(ViewKeyDict.published, published);
		articles.put(ViewKeyDict.approving, approving);
		articles.put(ViewKeyDict.rejected, rejected);
		myArticle.put(ViewKeyDict.articles, articles);
		return JsonUtil.toJson(myArticle, Json.appStrategy);
	}
}
