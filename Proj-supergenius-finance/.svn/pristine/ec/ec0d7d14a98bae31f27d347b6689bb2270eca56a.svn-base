package com.supergenius.web.finance.api;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.annotation.Json;
import com.genius.core.base.utils.JsonUtil;
import com.genius.core.base.utils.StrUtil;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.web.finance.helper.CommentsHP;
import com.supergenius.xo.user.entity.User;

/*
 * 用户接口
 * liubin
 */
@Controller
public class UserInterfacer extends BaseController {

	private static Logger log = LoggerFactory.getLogger(UserInterfacer.class);

	/**
	 * 个人中心用户信息
	 * 
	 * @param model
	 * @param uid
	 * @return
	 * @author liubin
	 * @createtime 2017年1月5日下午5:12:38
	 * @return String
	 */
	@RequestMapping(value = "/api/user/{uid:.{32}}", method = RequestMethod.GET)
	@ResponseBody
	public String getInfo(Map<String, Object> model, @PathVariable String uid) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		if (StrUtil.isNotEmpty(uid)) {
			User user = BaseUserHP.get(uid);
			if (user != null) {
				resultMap.put(ViewKeyDict.info, JsonUtil.toJson(user, Json.appStrategy));// ViewKeyDict.info配置出来
				log.info("the app need return userinfo JsonData" + JsonUtil.toJson(resultMap));
				return JsonUtil.toJson(resultMap);
			}
			log.info("user info is null");
		}
		return null;
	}

	/**
	 * 个人中心用户评论
	 * 
	 * @param model
	 * @param uid
	 * @return
	 * @author liubin
	 * @createtime 2017年1月5日下午5:12:38
	 * @return String
	 */
	@RequestMapping(value = "/api/user/{uid:.{32}}/comments", method = RequestMethod.GET)
	@ResponseBody
	public String getComments(HttpServletRequest request, Map<String, Object> model, @PathVariable String uid) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		Map<String, Object> receivedMap = new HashMap<String, Object>();
		Map<String, Object> mineMap = new HashMap<String, Object>();
		List<Map<String, Object>> list = new ArrayList<>();
		if (StrUtil.isNotEmpty(uid)) {
			User user = BaseUserHP.get(uid);
			if (user != null) {
				receivedMap.put(ViewKeyDict.received,
						JsonUtil.toJson(
								CommentsHP.getToMeComment(user.getUid(),
										Integer.valueOf((request.getParameter("num") == null || request.getParameter("num").length() == 0) ? "1" : request.getParameter("num")), WebConf.MsgPageSize),
								Json.webStrategy));// TODO 确认是否分页获取评论
				mineMap.put(ViewKeyDict.mine,
						JsonUtil.toJson(
								CommentsHP.getMyPublishComment(user.getUid(),
										Integer.valueOf((request.getParameter("num") == null || request.getParameter("num").length() == 0) ? "1" : request.getParameter("num")), WebConf.MsgPageSize),
								Json.webStrategy));// TODO 确认是否分页获取评论
				list.add(mineMap);
				list.add(receivedMap);
				resultMap.put(ViewKeyDict.comments, JsonUtil.toJson(list));
				log.info("the app need return usercomments JsonData:" + JsonUtil.toJson(resultMap));
				return JsonUtil.toJson(resultMap);
			}
			log.info("user comments is null!");
		}
		return null;
	}
}
