package com.supergenius.web.finance.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.utils.CookieUtil;
import com.genius.core.session.constant.SessDict;
import com.genius.server.base.controller.BaseController;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.xo.server.helper.BaseUserHP;
import com.supergenius.xo.user.entity.User;
import com.supergenius.xo.user.service.UserSO;

/**
 * 网站首页控制器
 *
 * @author ShangJianguo
 */
@Controller
public class LoginController extends BaseController {
	
	@Autowired
	UserSO so;
	/**
	 * 测试使用登录，地址为：
	 * http://localhost:9082/proj-supergenius-finance/login?usersn=testusersn&password=123456
	 * @param model
	 * @param request
	 * @param response
	 * @param usersn
	 * @param password
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = {"/login" }, method = RequestMethod.GET)
	public String index(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response,
			String usersn, String password) {
		if (StringUtils.isNotEmpty(usersn) && StringUtils.isNotEmpty(password)) {
			User user = so.get(usersn, null);
			if (user != null) {
				if (user.checkPwd(password)) {
					BaseUserHP.online(user, request, response);
					return "loginsuccess";
				}
			}
		}
		return "index";
	}

	/*
	 * 用户退出登录
	 */
	@ResponseBody
	@RequestMapping(value = { "/offline" }, method = RequestMethod.POST)
	public boolean offline_ajax(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) {
		if (BaseUserHP.offline(request)) {
			CookieUtil.removeCookie(response, SessDict.SESSION_ID);
			CookieUtil.removeCookie(response, ViewKeyDict.redirect);
			return true;
		}
		return false;
	}

}
