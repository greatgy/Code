package com.supergenius.web.finance.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.genius.model.base.entity.Pager;
import com.genius.model.base.enums.EStatus;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.SysConf;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.web.finance.helper.FinanceHP;
import com.supergenius.web.finance.helper.SubscribeHP;
import com.supergenius.web.finance.helper.TopicHP;
import com.supergenius.xo.common.enums.EChannel;
import com.supergenius.xo.finance.enums.ETopicState;
import com.supergenius.xo.finance.service.ContributorSO;
import com.supergenius.xo.finance.service.FinanceSO;
import com.supergenius.xo.finance.service.TopicSO;
import com.supergenius.xo.user.entity.User;
import com.supergenius.xo.user.enums.EComment;
import com.supergenius.xo.user.service.UserSO;

/**
 * 查看和TA的相关的内容
 * @author LiJiacheng
 */
@Controller
public class HisController extends BaseController {

	@Autowired
	FinanceSO financeSO;

	@Autowired
	TopicSO topicSO;

	@Autowired
	UserSO userSO;

	@Autowired
	ContributorSO contributorSO;

	/**
	 * 打开TA的文章、话题页面
	 * @param model
	 * @return
	 * @author LiJiacheng
	 */
	@RequestMapping(value = "/his/{channel:\\w+}/{id:\\d+}", method = RequestMethod.GET)
	public String his(Map<String, Object> model, @PathVariable int id, @PathVariable String channel, HttpServletRequest request, HttpServletResponse response) {
		User user = BaseUserHP.get(id);
		if (user == null) {
			return response404(response);
		}
		User nowUser = BaseUserHP.getCurrUser(request);
		String meuid = SysConf.DefaultAnonymousUid;
		if (nowUser != null && nowUser.getUid().equals(user.getUid())) {
			return redirectPrefix + ViewKeyDict.slash + ViewKeyDict.my + ViewKeyDict.slash + channel;
		}
		if (nowUser != null) {
			meuid = nowUser.getUid();
		}
		if (channel.equals(ViewKeyDict.article)) {
			model.put(ViewKeyDict.list, financeSO.getList(user.getUid(), EStatus.enable, new Pager(WebConf.MyArticlePageSize)));
			model.put(ViewKeyDict.count, FinanceHP.getAuthorArticleCount(user.getUid()));
			model.put(ViewKeyDict.count2, FinanceHP.getReadCount(user.getUid()));
			model.put(ViewKeyDict.list2, FinanceHP.getMyRankList(user.getUid()));
			model.put(ViewKeyDict.author, contributorSO.get(user.getUid()));
			model.put(ViewKeyDict.channel, channel);
			model.put(ViewKeyDict.user, user);
		} else if (channel.equals(ViewKeyDict.topic)) {
			model.put(ViewKeyDict.list, topicSO.getList(user.getUid(), ETopicState.succeed, new Pager(WebConf.MyTopicPageSize)));
			model.put(ViewKeyDict.topicrank, TopicHP.getListByTopicRankFromDB(user.getUid(), EChannel.topic, EComment.comment));
			model.put(ViewKeyDict.count, TopicHP.getAuthorTopicCount(user.getUid()));
			model.put(ViewKeyDict.count2, TopicHP.getAuthorTopicJoinCount(user.getUid()));
			model.put(ViewKeyDict.channel, channel);
			model.put(ViewKeyDict.user, user);
		} else {
			return response404(response);
		}
		model.put(ViewKeyDict.issubscribe, SubscribeHP.isSubscribe(meuid, user.getUid()));// 是否订阅
		return "his";
	}

	/**
	 * Ajax切换，TA的文章、话题页面
	 * @param model
	 * @return
	 * @author LiJiacheng
	 */
	@RequestMapping(value = "/ajax/his", method = RequestMethod.POST)
	public String ajaxhis(Map<String, Object> model, int oid, String channel, HttpServletResponse response, HttpServletRequest request) {
		User user = BaseUserHP.get(oid);
		if (channel.equals(ViewKeyDict.article)) {
			model.put(ViewKeyDict.list, financeSO.getList(user.getUid(), EStatus.enable, new Pager(WebConf.MyArticlePageSize)));
			model.put(ViewKeyDict.count, FinanceHP.getAuthorArticleCount(user.getUid()));
			model.put(ViewKeyDict.count2, FinanceHP.getReadCount(user.getUid()));
			model.put(ViewKeyDict.list2, FinanceHP.getMyRankList(user.getUid()));
			model.put(ViewKeyDict.author, contributorSO.get(user.getUid()));
			model.put(ViewKeyDict.channel, channel);
			model.put(ViewKeyDict.user, user);
		} else if (channel.equals(ViewKeyDict.topic)) {
			model.put(ViewKeyDict.list, topicSO.getList(user.getUid(), ETopicState.succeed, new Pager(WebConf.MyTopicPageSize)));
			model.put(ViewKeyDict.topicrank, TopicHP.getListByTopicRankFromDB(user.getUid(), EChannel.topic, EComment.comment));
			model.put(ViewKeyDict.count, TopicHP.getAuthorTopicCount(user.getUid()));
			model.put(ViewKeyDict.count2, TopicHP.getAuthorTopicJoinCount(user.getUid()));
			model.put(ViewKeyDict.channel, channel);
			model.put(ViewKeyDict.user, user);
		} else {
			return response404(response);
		}
		return "ajaxhis";
	}

	/**
	 * TA的文章、话题加载更多
	 * @param model
	 * @param pageunm
	 * @param response
	 * @param request
	 * @return
	 * @author YuYingJie
	 */
	@RequestMapping(value = "/ajax/{oid:\\d+}/{channel:\\w+}/{pagenum:\\d+}", method = RequestMethod.GET)
	public String ajax_hisloadmore(Map<String, Object> model, @PathVariable int oid, @PathVariable String channel, @PathVariable int pagenum, HttpServletResponse response, HttpServletRequest request) {
		User user = BaseUserHP.get(oid);
		if (user == null) {
			return null;
		}
		if (EChannel.article.name().equals(channel)) {
			model.put(ViewKeyDict.list, financeSO.getList(user.getUid(), EStatus.enable, Pager.getNewInstance(pagenum, WebConf.MyArticlePageSize)));
		} else {
			model.put(ViewKeyDict.list, topicSO.getList(user.getUid(), ETopicState.succeed, Pager.getNewInstance(pagenum, WebConf.MyTopicPageSize)));
		}
		model.put(ViewKeyDict.loadmoretype, channel);
		return "ajaxloadmore";
	}

}
