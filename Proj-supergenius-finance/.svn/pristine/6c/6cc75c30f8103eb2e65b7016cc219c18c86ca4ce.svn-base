package com.supergenius.web.finance.api;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.annotation.Json;
import com.genius.core.base.utils.JsonUtil;
import com.genius.core.base.utils.StrUtil;
import com.genius.model.base.entity.Pager;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.web.finance.helper.CollectDetailHP;
import com.supergenius.web.finance.helper.InboxHP;
import com.supergenius.web.finance.helper.MsgHP;
import com.supergenius.xo.finance.entity.CollectDetail;
import com.supergenius.xo.finance.entity.Finance;
import com.supergenius.xo.finance.enums.ECollectType;
import com.supergenius.xo.finance.enums.EFinance;
import com.supergenius.xo.finance.service.CollectDetailSO;
import com.supergenius.xo.finance.service.FinanceSO;
import com.supergenius.xo.user.entity.User;

/**
 * 我的收藏文章Controller
 * 
 * @author XieMing
 * @date 2017年1月5日 上午10:49:40
 */
@Controller
public class MyCollectInterfacer extends BaseController {

	@Autowired
	private CollectDetailSO so;
	@Autowired
	private FinanceSO financeSO;

	/**
	 * 我的收藏
	 * 
	 * @param model
	 * @param request
	 * @return
	 * @author XieMing 2017年1月5日 下午3:49:29
	 */
	@RequestMapping(value = { "/api/user/{uid:.{32}}/favourites" }, method = RequestMethod.GET)
	@ResponseBody
	private String my_collect(HttpServletRequest request, @PathVariable String uid) {
		Map<String, Object> result = new HashMap<String, Object>();
		int pageNum = Integer.valueOf((request.getParameter("num") == null || request.getParameter("num").length() == 0) ? "1" : request.getParameter("num"));
		List<CollectDetail> details = so.getList(uid, ECollectType.article, null, Pager.getNewInstance(pageNum, WebConf.MyFavouritePageSize));
		List<Finance> list = new ArrayList<>();
		for (CollectDetail collectDetail : details) {
			Finance finance = financeSO.get(collectDetail.getRefuid());
			if (finance != null) {
				list.add(finance);
			}
		}
		result.put(ViewKeyDict.favourites, list);
		return JsonUtil.toJson(result, Json.appStrategy);
	}

	/**
	 * @param request
	 * @param articleUids
	 * @return
	 * @author Yangguang 2017年7月26日 上午9:49:29
	 */
	@RequestMapping(value = { "/api/user/localfavourites" }, method = RequestMethod.GET)
	@ResponseBody
	private String mycollect(HttpServletRequest request) {
		Map<String, Object> result = new HashMap<String, Object>();
		String articleUids = request.getParameter("articleUids");
		List<Finance> list = new ArrayList<>();
		if (StrUtil.isNotEmpty(articleUids)) {
			String[] financeUids = articleUids.split(",");
			for (int i = 0; i < financeUids.length; i++) {
				Finance finance = financeSO.get(financeUids[i].substring(0, 32));
				list.add(finance);
			}
		}
		result.put(ViewKeyDict.favourites, list);
		return JsonUtil.toJson(result, Json.appStrategy);
	}

	/**
	 * 取消收藏
	 * 
	 * @param userUid
	 * @param articleUid
	 * @param request
	 * @return
	 * @author YangGuang 2017年5月8日 下午3:49:29
	 */
	@RequestMapping(value = { "/api/user/favourites/delete" }, method = RequestMethod.POST)
	@ResponseBody
	private String deleteCollect(HttpServletRequest request, String userUid, String articleUid) {
		if (StrUtil.isNotEmpty(userUid)) {
			User user = BaseUserHP.get(userUid);
			if (user != null) {
				CollectDetailHP.cancleCollect(user, ECollectType.article, articleUid);
				return "success";
			}
		}
		return "false";
	}

	/**
	 * 添加收藏
	 * 
	 * @param userUid
	 * @param articleUids
	 * @param request
	 * @return
	 * @author YangGuang 2017年5月15日 上午11:49:29
	 */
	@RequestMapping(value = { "/api/user/favourites/add" }, method = RequestMethod.POST)
	@ResponseBody
	private String addCollect(HttpServletRequest request, String userUid, String articleUids) {
		if (StrUtil.isNotEmpty(userUid) && StrUtil.isNotEmpty(articleUids)) {
			User user = BaseUserHP.get(userUid);
			if (user != null) {
				String[] financeUids = articleUids.split(",");
				for (int i = 0; i < financeUids.length; i++) {
					if (CollectDetailHP.isCollect(userUid, ECollectType.article, financeUids[i].substring(0, 32))) {
						continue;
					} else {
						if (CollectDetailHP.add(user, ECollectType.article, EFinance.getByName(financeUids[i].substring(32)), financeUids[i].substring(0, 32))) {
							if (financeSO.get(financeUids[i].substring(0, 32)).getAuthoruid().equals(user.getUid())) {
								continue;
							} else {
								InboxHP.sendInboxByMsg(MsgHP.collectMsg(user, ECollectType.article, EFinance.getByName(financeUids[i].substring(32)), financeUids[i].substring(0, 32)));
							}
						}
					}
				}
				return "success";
			}
		}
		return "false";
	}
}