package com.supergenius.web.finance.api;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.annotation.Json;
import com.genius.core.base.utils.JsonUtil;
import com.genius.model.base.entity.Pager;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.web.finance.helper.InboxHP;
import com.supergenius.xo.finance.entity.Inbox;
import com.supergenius.xo.finance.enums.EFinanceMsg;
import com.supergenius.xo.user.entity.User;

/**
 * app用户通知页
 * 
 * @author chenqi
 * @date 2017年4月13日上午11:23:57
 */
@Controller
public class NotificationsInterfacer extends BaseController {

	EFinanceMsg[] notice = { EFinanceMsg.articlepraise, EFinanceMsg.topicpraise, EFinanceMsg.speakpraise, EFinanceMsg.articlecollect, EFinanceMsg.topiccollect, EFinanceMsg.articlepass,
			EFinanceMsg.topicpass, EFinanceMsg.articleunpass, EFinanceMsg.topicunpass, EFinanceMsg.articledelete, EFinanceMsg.topicdelete, EFinanceMsg.topicinvite, EFinanceMsg.newarticle,
			EFinanceMsg.newtopic, EFinanceMsg.subscribe };

	/**
	 * app获取用户通知
	 * 
	 * @param request
	 * @param uid
	 * @return
	 * @author YangGuang
	 * @createtime 2017年4月13日上午12:15:46
	 * @return String
	 */
	@RequestMapping(value = { "/api/user/{uid:.{32}}/notifications" }, method = RequestMethod.GET)
	@ResponseBody
	public String getNotifications(HttpServletRequest request, @PathVariable String uid) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		int pageNum = Integer.valueOf((request.getParameter("num") == null || request.getParameter("num").length() == 0) ? "1" : request.getParameter("num"));
		User user = BaseUserHP.get(uid);
		if (user != null) {
			Pager pager = Pager.getNewInstance(pageNum, WebConf.MsgPageSize);
			List<Inbox> noticeInboxs = InboxHP.getUserInboxs(user, pager, notice);
			resultMap.put(ViewKeyDict.notifications, noticeInboxs);
			return JsonUtil.toJson(resultMap, Json.appStrategy);
		}
		return null;
	}
}