package com.supergenius.web.finance.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.genius.core.base.utils.CookieUtil;
import com.genius.core.base.utils.StrUtil;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.SysConf;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.server.user.helper.BaseUserHP;
import com.supergenius.web.finance.helper.CollectDetailHP;
import com.supergenius.web.finance.helper.CommentsHP;
import com.supergenius.web.finance.helper.DebateHP;
import com.supergenius.web.finance.helper.FinanceHP;
import com.supergenius.web.finance.helper.QuotesHP;
import com.supergenius.web.finance.helper.SubscribeHP;
import com.supergenius.web.finance.helper.TopicHP;
import com.supergenius.web.finance.helper.UserHP;
import com.supergenius.xo.common.enums.EChannel;
import com.supergenius.xo.finance.entity.Debate;
import com.supergenius.xo.finance.entity.DebateArticle;
import com.supergenius.xo.finance.entity.Finance;
import com.supergenius.xo.finance.enums.ECollectType;
import com.supergenius.xo.finance.enums.ECountType;
import com.supergenius.xo.finance.enums.EFinance;
import com.supergenius.xo.finance.service.ContributeSO;
import com.supergenius.xo.finance.service.ContributorSO;
import com.supergenius.xo.finance.service.DebateArticleSO;
import com.supergenius.xo.finance.service.DebateSO;
import com.supergenius.xo.finance.service.FinanceSO;
import com.supergenius.xo.finance.service.UserStatisticsSO;
import com.supergenius.xo.user.entity.User;
import com.supergenius.xo.user.enums.EComment;
import com.supergenius.xo.user.service.CommentsSO;

/**
 * 天财评论文章控制器
 * 
 * @author ShangJianguo
 */
@Controller
public class FinanceController extends BaseController {

	private static String ajaxarticle = "ajaxarticle";

	@Autowired
	FinanceSO so;

	@Autowired
	CommentsSO commentsSO;

	@Autowired
	ContributeSO contributeSO;

	@Autowired
	ContributorSO contributorSO;

	@Autowired
	DebateArticleSO debatearticleSO;

	@Autowired
	DebateSO debateSO;

	@Autowired
	UserStatisticsSO userStatisticsSO;

	/**
	 * 进入到文章板块首页
	 * 
	 * @param model
	 * @param type
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = "/{type:\\w+}", method = RequestMethod.GET)
	public String finance(Map<String, Object> model, @PathVariable String type, HttpServletResponse response) {
		EFinance typeObj = EFinance.getByName(type);
		if (typeObj == null) {
			return response404(response);
		}
		List<Finance> latestList = FinanceHP.getLatest(typeObj, 1, WebConf.FinancePageSize);
		List<Finance> rankList = FinanceHP.getRankList(ECountType.click, null);
//		List<Finance> typeRankList = FinanceHP.getRankList(ECountType.click, typeObj);
		List<Map<String, Object>> comments = CommentsHP.getNewestComments(typeObj, EChannel.finance, EComment.comment, WebConf.NewestCommentsCount);
		model.put(ViewKeyDict.quote, QuotesHP.getNewestQuote());
		model.put(ViewKeyDict.type, typeObj.getName());// 板块中文
		model.put(ViewKeyDict.typename, typeObj.name());// 板块枚举的name
		model.put(ViewKeyDict.latestlist, latestList);// 最新分类文章
		model.put(ViewKeyDict.list, rankList); //文章排行榜
//		model.put(ViewKeyDict.list2, typeRankList); //模块文章排行榜  TODO 暂时去掉 2016 8 17 chenminchang
		model.put(ViewKeyDict.newestcomments, comments);
		return "finance";
	}

	/**
	 * 加载更多文章
	 * 
	 * @param model
	 * @param type
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = "/ajax/{type:\\w+}", method = RequestMethod.GET)
	public String finance_ajax(Map<String, Object> model, @PathVariable String type, Integer pagenum) {
		EFinance typeObj = EFinance.getByName(type);
		if (pagenum == null) {
			pagenum = 1;
		}
		List<Finance> latestList = FinanceHP.getLatest(typeObj, pagenum <= 0 ? 1 : pagenum, WebConf.FinancePageSize);
		model.put(ViewKeyDict.type, ViewKeyDict.finacelatest);// 板块
		model.put(ViewKeyDict.typename, typeObj.name());// 板块
		model.put(ViewKeyDict.channel, typeObj.getName());// 板块
		model.put(ViewKeyDict.latestlist, latestList);// 最新分类文章
		return ajaxarticle;
	}

	/**
	 * 文章查看详情页面
	 * 
	 * @param model
	 * @param type
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = "/{type:\\w+}/{id:\\d+}", method = RequestMethod.GET)
	public String finance_view(Map<String, Object> model, @PathVariable String type, @PathVariable int id, HttpServletRequest request, HttpServletResponse respone) {
		User user = BaseUserHP.getCurrUser(request);
		Finance finance = FinanceHP.getSerialize(id);
		String meuid = SysConf.DefaultAnonymousUid;
		if (finance == null) {
			return response404(respone);
		}
		if (user == null && !finance.isIspublic()) {
			return redirectPrefix + WebConf.LoginURL;
		}
		EFinance typeObj = EFinance.getByName(type);
		if (typeObj == null || finance == null) {
			return response404(respone);
		}
		FinanceHP.getPagerContent(model, finance.getContent(), request);
		if (user != null) {// 设置是否赞过
			List<String> prizes = UserHP.getListPrize(user);
			for (String item : prizes) {
				if (finance.getUid().equals(item)) {
					finance.setIsprize(true);
					break;
				}
			}
		} else {
			Cookie cookie = CookieUtil.getCookie(request, EChannel.finance.name() + finance.getUid() + ViewKeyDict.prizefinance);
			if (cookie != null) {
				finance.setIsprize(true);
			}
		}
		if (user != null) {// 是否收藏过
			meuid = user.getUid();
			finance.setIscollect(CollectDetailHP.isCollect(user.getUid(), ECollectType.article, finance.getUid()));
		}
		FinanceHP.incrClickCount(request, respone, finance, user);// 增加计数
		List<Finance> rankList = FinanceHP.getRankList(ECountType.click, null);
//		List<Finance> typeRankList = FinanceHP.getRankList(ECountType.click, typeObj);
		int articleCount = FinanceHP.getAuthorArticleCount(finance.getAuthoruid());
		Map<String, Object> lastnextMap = so.getLastNext(finance, typeObj);
		model.put(ViewKeyDict.quote, QuotesHP.getNewestQuote());
		model.put(ViewKeyDict.type, typeObj.getName());// 板块
		model.put(ViewKeyDict.typename, typeObj.name());// 板块
		model.put(ViewKeyDict.collect, ECollectType.article.name());
		model.put(ViewKeyDict.bean, finance);
		model.put(ViewKeyDict.author, BaseUserHP.get(finance.getAuthoruid()));
		model.put(ViewKeyDict.list, rankList);
//		model.put(ViewKeyDict.list2, typeRankList);//子版块的热门文章排行榜  TODO 暂时去掉 2016 8 17 chenminchang
		model.put(ViewKeyDict.count, articleCount);
		model.put(ViewKeyDict.count2, TopicHP.getAuthorTopicCount(finance.getAuthoruid()));
		model.put(ViewKeyDict.map, lastnextMap);
		model.put(ViewKeyDict.issubscribe, SubscribeHP.isSubscribe(meuid, finance.getAuthoruid()));// 是否订阅
		model.put(ViewKeyDict.wonderfullist, CommentsHP.getCommentsFromPraise(finance.getUid(), EChannel.finance, EComment.comment, SysConf.TopicCommentRankNum));
		return "financeoid";
	}

	/**
	 * 论战文章查看详情页面
	 * 
	 * @param model
	 * @param type
	 * @return
	 * @author ShangJianguo
	 */
	@RequestMapping(value = "/debate/article/{id:.{32}}", method = RequestMethod.GET)
	public String finance_debate_view(Map<String, Object> model, @PathVariable String id, HttpServletRequest request, HttpServletResponse respone) {
		cloneParamsToModel(model, request);
		String meuid = SysConf.DefaultAnonymousUid;
		if (StrUtil.isEmpty(model.get(ViewKeyDict.doid))) {
			DebateArticle debateArticle = debatearticleSO.getByFinanceuid(id);
			Debate debate = debateSO.get(debateArticle.getDebateuid());
			model.put(ViewKeyDict.doid, debate.getOid());
			model.put(ViewKeyDict.dperioid, debate.getPeriods());
			if (debateArticle.isIsred()) {
				model.put(ViewKeyDict.dviewpoint, debate.getTitlered());
			}
			model.put(ViewKeyDict.dviewpoint, debate.getTitlered());
		}
		User user = BaseUserHP.getCurrUser(request);
		Finance finance = so.get(id);
		if (user == null && !finance.isIspublic()) {
			return redirectPrefix + WebConf.LoginURL;
		}
		if (user != null) {
			meuid = user.getUid();
			List<String> prizes = UserHP.getListPrize(user);
			for (String item : prizes) {
				if (finance.getUid().equals(item)) {
					finance.setIsprize(true);
					break;
				}
			}
		} else {
			Cookie cookie = CookieUtil.getCookie(request, EChannel.finance.name() + finance.getUid() + ViewKeyDict.prizefinance);
			if (cookie != null) {
				finance.setIsprize(true);
			}
		}
		if (user != null) {
			finance.setIscollect(CollectDetailHP.isCollect(user.getUid(), ECollectType.article, finance.getUid()));
		}
		FinanceHP.incrClickCount(request, respone, finance, user);// 增加计数
		List<Finance> rankList = FinanceHP.getRankList(ECountType.click, null);
		int articleCount = FinanceHP.getAuthorArticleCount(finance.getAuthoruid());
		List<Debate> debaterank = DebateHP.getListByDebateRankFromComments();
		model.put(ViewKeyDict.type, EFinance.debate.getName());// 板块中文
		model.put(ViewKeyDict.typename, EFinance.debate.name());// 板块枚举的name
		model.put(ViewKeyDict.collect, ECollectType.article.name());// 收藏类型
		model.put(ViewKeyDict.bean, finance);
		model.put(ViewKeyDict.author, BaseUserHP.get(finance.getAuthoruid()));
		model.put(ViewKeyDict.list, rankList);
		model.put(ViewKeyDict.list2, debaterank);
		model.put(ViewKeyDict.count, articleCount);
		model.put(ViewKeyDict.count2, TopicHP.getAuthorTopicCount(finance.getAuthoruid()));
		model.put(ViewKeyDict.issubscribe, SubscribeHP.isSubscribe(meuid, finance.getAuthoruid()));// 是否订阅
		model.put(ViewKeyDict.wonderfullist, CommentsHP.getCommentsFromPraise(finance.getUid(), EChannel.finance, EComment.comment, SysConf.TopicCommentRankNum));
		return "financeoid";
	}

}
