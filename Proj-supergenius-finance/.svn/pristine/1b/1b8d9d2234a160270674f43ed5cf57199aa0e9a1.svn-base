package com.supergenius.web.finance.api;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.genius.core.base.utils.JsonUtil;
import com.genius.core.base.utils.StrUtil;
import com.genius.server.base.controller.BaseController;
import com.supergenius.global.conf.WebConf;
import com.supergenius.server.common.constants.ViewKeyDict;
import com.supergenius.web.finance.helper.CommentsHP;
import com.supergenius.web.finance.helper.UserHP;
import com.supergenius.xo.finance.entity.Finance;
import com.supergenius.xo.user.entity.Comments;
import com.supergenius.xo.user.entity.User;

/** 
* app用户通知页
* @author chenqi
* @date 2017年4月13日上午11:23:57 
*/
@Controller
public class NotificationsInterfacer extends BaseController {
	
	private static Logger log = LoggerFactory.getLogger(NotificationsInterfacer.class);
	
	/**
	 * app获取用户通知
	 * @param request
	 * @param uid
	 * @return
	 * @author chenqi
	 * @createtime 2017年4月13日上午12:15:46
	 * @return String
	 */
	@RequestMapping( value = {"/api/user/{uid:.{32}}/notifications"}, method = RequestMethod.GET)
	@ResponseBody
	public String getNotifications(HttpServletRequest request, @PathVariable String uid) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		List<Map<String, Object>> resultList = new ArrayList<>();
		List<Map<String, Object>> commentsList = new ArrayList<>();
		if (StrUtil.isNotEmpty(uid)) {
			commentsList = CommentsHP.getToMeComment(uid, Integer.valueOf(request.getParameter("num")), WebConf.MsgPageSize); 
			for (Map<String, Object> map : commentsList) {
				Map<String, Object> listMap = new HashMap<>();
				Comments comments =  (Comments) map.get(ViewKeyDict.bean);
				Finance finance = (Finance) map.get(ViewKeyDict.finance);
				User user = UserHP.get(comments.getFromuseruid());
				if (comments != null && finance != null && user != null) {
					listMap.put(ViewKeyDict.fromid, comments.getFromuseruid());
					listMap.put(ViewKeyDict.fromname, comments.getFromusername());
					listMap.put(ViewKeyDict.fromicon, user.getUserInfo().getAvatar());
					listMap.put(ViewKeyDict.commentscontent, comments.getContent());
					listMap.put(ViewKeyDict.commentstype, map.get(ViewKeyDict.typename));
					listMap.put(ViewKeyDict.origincontent, finance.getTitle());
					listMap.put(ViewKeyDict.originlink, finance.getOriginurl());
					listMap.put(ViewKeyDict.createtime, comments.getCreatetimeStr());
					resultList.add(listMap);
				} else {
					log.info("comments or finance or user info is null");
				}
			}
			resultMap.put(ViewKeyDict.notifications, resultList);
			log.info("the app need return info JsonData" + JsonUtil.toJson(resultMap));
			return JsonUtil.toJson(resultMap);
		}
		return null;
	}
}