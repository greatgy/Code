<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="{{namespace}}.{{className}}Dao">

    <sql id="basecolumns">{{#each allfields.base}}`{{this}}`{{#if @last}}{{else}},{{/if}} {{/each}}</sql>
    <sql id="othercolumns">{{#each allfields.other}}`{{this}}`{{#if @last}}{{else}},{{/if}} {{/each}}</sql>
    <sql id="allcolumns"><include refid="basecolumns"/>, <include refid="othercolumns"/>, `{{allfields.update}}`</sql>
    <sql id="table">{{table}}</sql>
    <sql id="count">count(*)</sql>
    <sql id="whereid">{{#if ids.uid}}where uid = #{uid}{{else}}where oid = #{oid}{{/if}}</sql>
    <sql id="allfields"><include refid="basecolumns"/>, <include refid="othercolumns"/> </sql>
    <sql id="allparams">{{#each allfields.base}}#{{{brace this}}},{{/each}}{{#each allfields.other}}#{{{brace this}}}{{#if @last}}{{else}},{{/if}}{{/each}}</sql>
    {{#each allfields.other}}
    <sql id="set{{this}}">`{{this}}` = #{{{brace this}}}</sql>
    {{/each}}
    <sql id="allsets">set
        {{#each allfields.other}}
            <include refid="set{{this}}"/>{{#if @last}}{{else}},{{/if}}
        {{/each}}
    </sql>
    <sql id="orderby">order by createtime</sql>

    <select id="get" parameterType="string" resultType="{{table}}">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <include refid="whereid"/>
    </select>

    <select id="getOne" parameterType="hashMap" resultType="{{table}}">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <where>
            {{#each allfields.other}}
            <if test="{{this}} != null">
                and <include refid="set{{this}}"/>
            </if>
            {{/each}}
        </where>
        LIMIT 0,1
    </select>

    <select id="getCount" parameterType="hashMap" resultType="int">
        select
        <include refid="count" />
        from
        <include refid="table"/>
        <where>
            {{#each allfields.other}}
            <if test="{{this}} != null">
                and <include refid="set{{this}}"/>
            </if>
            {{/each}}
        </where>
    </select>

    <select id="getList" parameterType="hashMap" resultType="{{table}}">
        select
        <include refid="allcolumns" />
        from
        <include refid="table"/>
        <where>
            {{#each allfields.other}}
            <if test="{{this}} != null">
                and <include refid="set{{this}}"/>
            </if>
            {{/each}}
        </where>
        <!-- 处理orderby语句 -->
        <choose>
            <when test="orderBy != null">
                ${orderBy}
            </when>
            <otherwise>
                <include refid="orderby"/>
                <if test="ascDesc != null">
                    ${ascDesc}
                </if>
            </otherwise>
        </choose>
        <!-- 处理limit语句 -->
        <trim prefix="LIMIT" prefixOverrides=",">
            <if test="startIndex != null and pageSize != null">
                ${startIndex}
            </if>
            <if test="pageSize != null">
                , ${pageSize}
            </if>
        </trim>
    </select>

    <insert id="insert" parameterType="{{table}}">
        insert into
        <include refid="table"/>
        (<include refid="allfields"/>)
        values (
        <include refid="allparams"/>
        )
    </insert>

    <update id="update" parameterType="{{table}}">
        update
        <include refid="table"/>
        <include refid="allsets"/>
        <include refid="whereid"/>
    </update>

    <update id="updateFields" parameterType="hashMap">
        update
        <include refid="table"/>
        <set>
            {{#each allfields.other}}
            <if test="{{this}} != null">
                <include refid="set{{this}}"/>{{#if @last}}{{else}},{{/if}}
            </if>
            {{/each}}
        </set>
        <include refid="whereid"/>
    </update>

    <delete id="delete" parameterType="string">
        delete from
        <include refid="table"/>
        <include refid="whereid"/>
    </delete>

</mapper>

