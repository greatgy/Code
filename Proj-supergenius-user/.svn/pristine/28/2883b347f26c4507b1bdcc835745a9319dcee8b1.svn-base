package com.supergenius.web.front.user.controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.genius.server.base.controller.BaseController;
import com.supergenius.xo.user.service.UserSO;

import weibo4j.examples.oauth2.Log;
import weibo4j.model.WeiboException;
import weibo4j.util.BareBonesBrowserLaunch;

/**
 * 微博登录Controller
 * 
 * @author ChenQi
 * @date 2018年3月13日14:56:46
 */
@Controller
public class WeiBoLoginController extends BaseController {

	@Autowired
	private UserSO userSO; 

	/**
	 * 微博登录
	 * 
	 * @param model
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 */
	@RequestMapping(value = { "/login/weibo" }, method = RequestMethod.GET)
	public String login_weibo(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws IOException {
		weibo4j.Oauth oauth = new weibo4j.Oauth();
		try {
			BareBonesBrowserLaunch.openURL(oauth.authorize("code", "true"));
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			String code = br.readLine();
			oauth.getAccessTokenByCode(code);
		} catch (WeiboException e) {
			if(401 == e.getStatusCode()){
				Log.logInfo("Unable to get the access token.");
			}else{
				e.printStackTrace();
			}
		}
		
		return null;
	}
	
	/**
	 * qq登录回调
	 * 
	 * @param model
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 */
	@RequestMapping(value = { "/afterlogin/weibo" }, method = RequestMethod.GET)
	public String AfterLogin(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws IOException {
		System.out.println("123");
		return null;
	}
}
